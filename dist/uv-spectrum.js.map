{"version":3,"sources":["webpack://IRSpectrum/webpack/universalModuleDefinition","webpack://IRSpectrum/webpack/bootstrap","webpack://IRSpectrum/./node_modules/is-any-array/src/index.js","webpack://IRSpectrum/./node_modules/ml-stat/index.js","webpack://IRSpectrum/./node_modules/ml-stat/array.js","webpack://IRSpectrum/./node_modules/ml-arrayxy-uniquex/src/index.js","webpack://IRSpectrum/./lib/index.js","webpack://IRSpectrum/./node_modules/ml-array-min/lib-es6/index.js","webpack://IRSpectrum/./node_modules/ml-array-max/lib-es6/index.js","webpack://IRSpectrum/./node_modules/ml-array-utils/src/index.js","webpack://IRSpectrum/./node_modules/ml-array-utils/src/ArrayUtils.js","webpack://IRSpectrum/./node_modules/ml-stat/matrix.js","webpack://IRSpectrum/./node_modules/ml-array-utils/src/getEquallySpaced.js","webpack://IRSpectrum/./node_modules/ml-array-utils/src/snv.js","webpack://IRSpectrum/./node_modules/jcampconverter/src/index.js","webpack://IRSpectrum/./node_modules/xy-parser/src/index.js","webpack://IRSpectrum/./node_modules/ml-array-sequential-fill/lib-es6/index.js","webpack://IRSpectrum/./node_modules/ml-array-xy-equally-spaced/src/integral.js","webpack://IRSpectrum/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSmooth.js","webpack://IRSpectrum/./node_modules/ml-array-xy-equally-spaced/src/equallySpacedSlot.js","webpack://IRSpectrum/./node_modules/ml-array-xy-equally-spaced/src/index.js"],"names":["toString","Object","prototype","isAnyArray","object","call","endsWith","module","exports","array","require","matrix","compareNumbers","a","b","sum","values","i","length","max","l","min","minMax","arithmeticMean","mean","geometricMean","mul","Math","pow","logMean","lnsum","log","grandMean","means","samples","n","truncatedMean","percent","alreadySorted","undefined","concat","sort","k","floor","harmonicMean","RangeError","contraHarmonicMean","r1","r2","median","half","variance","unbiased","theMean","theVariance","x","standardDeviation","sqrt","standardError","robustMeanAndStdev","y","stdev","averageDeviations","Array","abs","quartiles","quart","q1","ceil","q2","q3","pooledStandardDeviation","pooledVariance","vari","mode","itemCount","itemArray","count","index","indexOf","maxValue","maxIndex","covariance","vector1","vector2","mean1","mean2","cov","skewness","s2","s3","dev","m2","m3","g","kurtosis","s4","m4","v","c","entropy","eps","weightedMean","weights","weightedStandardDeviation","weightedVariance","z","w","center","inPlace","result","standardize","standardDev","cumulativeSum","uniqueX","xs","ys","current","counter","defineProperty","value","_interopDefault","ex","equallySpaced","Util","jcampconverter","xyParser","ABSORBANCE","TRANSMITTANCE","PERCENT_TRANSMITTANCE","getKind","kind","Error","match","toJSON","wavelength","transmittance","peaks","getAnnotations","spectrum","options","fillColor","strokeColor","creationFct","annotations","map","peak","annotation","line","type","strokeWidth","annotationAbsorbance","annotationTransmittance","factor","label","text","String","size","anchor","color","position","dy","dx","absorbance","getData","getAbsorbance","getTransmittance","getPercentTransmittance","addPeak","log10","existing","Number","push","peakPicking","targetWavelength","range","optimize","bestPeak","getClosest","findClosest","bestInRange","error","newError","setBestPeak","previousIndex","getNormalized","from","to","numberOfPoints","applySNV","SNV","Spectrum","constructor","json","check","setPeaks","setMode","data","getYLabel","minWavelength","maxWavelength","minAbsorbance","maxAbsorbance","minTransmittance","maxTransmittance","Spectra","addSpectrum","id","meta","getSpectrumIndex","normalized","removeSpectrum","splice","getNormalizedData","ids","datum","fromJcamp","jcamp","convert","xy","spectra","yUnit","fromText","assign","arrayType","parseXY","transmisttance","input","isArray","TypeError","getEquallySpacedData","Stat","coordArrayToPoints","dimensions","pointsArr","point","j","coordArrayToCoordMatrix","coordinatesArray","points","currentPoint","coordMatrixToCoordArray","coordMatrix","coodinatesArray","transpose","resultMatrix","pointsToCoordArray","applyDotProduct","firstVector","secondVector","largestVector","smallestVector","difference","dotProductApplied","scale","coordMatrixToPoints","pointsToCoordMatrix","arrayStat","Infinity","l1","l2","dimension","rows","cols","N","theSum","product","theProduct","sum1","sum2","medians","modes","skew","m","kurt","standardDeviations","standardErrors","sqrtN","scatter","divisor","s","correlation","scores","zScores","cor","jj","row","resultRow","sourceRow","isNaN","ii","weightSum","weightedCovariance","s1","weightedScatter","xLength","slice","reverse","variant","output","getEquallySpacedSlot","getEquallySpacedSmooth","step","halfStep","initialOriginalStep","lastOriginalStep","previousX","MIN_VALUE","previousY","nextX","nextY","currentValue","slope","intercept","sumAtMin","sumAtMax","getSlope","x0","y0","x1","y1","main","add","integral","lastStep","start","MAX_VALUE","frontOutsideSpectra","backOutsideSpectra","currentPoints","std","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","keepRecordsRegExp","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","wantXY","Date","now","ntuples","ldr","dataLabel","dataValue","ldrs","endLine","infos","logs","info","action","time","split","replace","substring","trim","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","xFactor","yFactor","units","xUnit","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","maxX","minX","maxY","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","keys","newNtuples","key","add2D","newData","complexChromatogram","simpleChromatogram","toLowerCase","times","series","ms","existingGCMSFields","intensity","shift","getMedian","convertTo3DZ","minZ","maxZ","ySize","xSize","xVector","noise","zData","contourLines","generateContourLines","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","xN","yN","iter","contourLevels","lineZValue","level","contourLevel","side","exp","lines","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","JSON","stringify","workerURL","URL","createObjectURL","Blob","Worker","revokeObjectURL","addEventListener","event","parse","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","labelLine","startsWith","join","children","finished","pop","forEach","entry","normalize","xColumn","yColumn","keepInfo","maxNumberColumns","minNumberColumns","fields","uniqueXFunction","newResult","_typeof","obj","Symbol","iterator","sequentialFill","arguments","_options","_options$from","_options$to","_options$size","_i","equallySpacedSmooth","equallySpacedSlot","arrayXY","originalFrom","originalTo"],"mappings":"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","file":"cv-spectrum.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"IRSpectrum\"] = factory();\n\telse\n\t\troot[\"IRSpectrum\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 4);\n","'use strict';\n\nconst toString = Object.prototype.toString;\n\nfunction isAnyArray(object) {\n  return toString.call(object).endsWith('Array]');\n}\n\nmodule.exports = isAnyArray;\n","'use strict';\n\nexports.array = require('./array');\nexports.matrix = require('./matrix');\n","'use strict';\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\n/**\n * Computes the sum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.sum = function sum(values) {\n    var sum = 0;\n    for (var i = 0; i < values.length; i++) {\n        sum += values[i];\n    }\n    return sum;\n};\n\n/**\n * Computes the maximum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.max = function max(values) {\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] > max) max = values[i];\n    }\n    return max;\n};\n\n/**\n * Computes the minimum of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.min = function min(values) {\n    var min = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n    }\n    return min;\n};\n\n/**\n * Computes the min and max of the given values\n * @param {Array} values\n * @returns {{min: number, max: number}}\n */\nexports.minMax = function minMax(values) {\n    var min = values[0];\n    var max = values[0];\n    var l = values.length;\n    for (var i = 1; i < l; i++) {\n        if (values[i] < min) min = values[i];\n        if (values[i] > max) max = values[i];\n    }\n    return {\n        min: min,\n        max: max\n    };\n};\n\n/**\n * Computes the arithmetic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.arithmeticMean = function arithmeticMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        sum += values[i];\n    }\n    return sum / l;\n};\n\n/**\n * {@link arithmeticMean}\n */\nexports.mean = exports.arithmeticMean;\n\n/**\n * Computes the geometric mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.geometricMean = function geometricMean(values) {\n    var mul = 1;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        mul *= values[i];\n    }\n    return Math.pow(mul, 1 / l);\n};\n\n/**\n * Computes the mean of the log of the given values\n * If the return value is exponentiated, it gives the same result as the\n * geometric mean.\n * @param {Array} values\n * @returns {number}\n */\nexports.logMean = function logMean(values) {\n    var lnsum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        lnsum += Math.log(values[i]);\n    }\n    return lnsum / l;\n};\n\n/**\n * Computes the weighted grand mean for a list of means and sample sizes\n * @param {Array} means - Mean values for each set of samples\n * @param {Array} samples - Number of original values for each set of samples\n * @returns {number}\n */\nexports.grandMean = function grandMean(means, samples) {\n    var sum = 0;\n    var n = 0;\n    var l = means.length;\n    for (var i = 0; i < l; i++) {\n        sum += samples[i] * means[i];\n        n += samples[i];\n    }\n    return sum / n;\n};\n\n/**\n * Computes the truncated mean of the given values using a given percentage\n * @param {Array} values\n * @param {number} percent - The percentage of values to keep (range: [0,1])\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.truncatedMean = function truncatedMean(values, percent, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var k = Math.floor(l * percent);\n    var sum = 0;\n    for (var i = k; i < (l - k); i++) {\n        sum += values[i];\n    }\n    return sum / (l - 2 * k);\n};\n\n/**\n * Computes the harmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.harmonicMean = function harmonicMean(values) {\n    var sum = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        if (values[i] === 0) {\n            throw new RangeError('value at index ' + i + 'is zero');\n        }\n        sum += 1 / values[i];\n    }\n    return l / sum;\n};\n\n/**\n * Computes the contraharmonic mean of the given values\n * @param {Array} values\n * @returns {number}\n */\nexports.contraHarmonicMean = function contraHarmonicMean(values) {\n    var r1 = 0;\n    var r2 = 0;\n    var l = values.length;\n    for (var i = 0; i < l; i++) {\n        r1 += values[i] * values[i];\n        r2 += values[i];\n    }\n    if (r2 < 0) {\n        throw new RangeError('sum of values is negative');\n    }\n    return r1 / r2;\n};\n\n/**\n * Computes the median of the given values\n * @param {Array} values\n * @param {boolean} [alreadySorted=false]\n * @returns {number}\n */\nexports.median = function median(values, alreadySorted) {\n    if (alreadySorted === undefined) alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n    var l = values.length;\n    var half = Math.floor(l / 2);\n    if (l % 2 === 0) {\n        return (values[half - 1] + values[half]) * 0.5;\n    } else {\n        return values[half];\n    }\n};\n\n/**\n * Computes the variance of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.variance = function variance(values, unbiased) {\n    if (unbiased === undefined) unbiased = true;\n    var theMean = exports.mean(values);\n    var theVariance = 0;\n    var l = values.length;\n\n    for (var i = 0; i < l; i++) {\n        var x = values[i] - theMean;\n        theVariance += x * x;\n    }\n\n    if (unbiased) {\n        return theVariance / (l - 1);\n    } else {\n        return theVariance / l;\n    }\n};\n\n/**\n * Computes the standard deviation of the given values\n * @param {Array} values\n * @param {boolean} [unbiased=true] - if true, divide by (n-1); if false, divide by n.\n * @returns {number}\n */\nexports.standardDeviation = function standardDeviation(values, unbiased) {\n    return Math.sqrt(exports.variance(values, unbiased));\n};\n\nexports.standardError = function standardError(values) {\n    return exports.standardDeviation(values) / Math.sqrt(values.length);\n};\n\n/**\n * IEEE Transactions on biomedical engineering, vol. 52, no. 1, january 2005, p. 76-\n * Calculate the standard deviation via the Median of the absolute deviation\n *  The formula for the standard deviation only holds for Gaussian random variables.\n * @returns {{mean: number, stdev: number}}\n */\nexports.robustMeanAndStdev = function robustMeanAndStdev(y) {\n    var mean = 0, stdev = 0;\n    var length = y.length, i = 0;\n    for (i = 0; i < length; i++) {\n        mean += y[i];\n    }\n    mean /= length;\n    var averageDeviations = new Array(length);\n    for (i = 0; i < length; i++)\n        averageDeviations[i] = Math.abs(y[i] - mean);\n    averageDeviations.sort(compareNumbers);\n    if (length % 2 === 1) {\n        stdev = averageDeviations[(length - 1) / 2] / 0.6745;\n    } else {\n        stdev = 0.5 * (averageDeviations[length / 2] + averageDeviations[length / 2 - 1]) / 0.6745;\n    }\n\n    return {\n        mean: mean,\n        stdev: stdev\n    };\n};\n\nexports.quartiles = function quartiles(values, alreadySorted) {\n    if (typeof (alreadySorted) === 'undefined') alreadySorted = false;\n    if (!alreadySorted) {\n        values = [].concat(values).sort(compareNumbers);\n    }\n\n    var quart = values.length / 4;\n    var q1 = values[Math.ceil(quart) - 1];\n    var q2 = exports.median(values, true);\n    var q3 = values[Math.ceil(quart * 3) - 1];\n\n    return {q1: q1, q2: q2, q3: q3};\n};\n\nexports.pooledStandardDeviation = function pooledStandardDeviation(samples, unbiased) {\n    return Math.sqrt(exports.pooledVariance(samples, unbiased));\n};\n\nexports.pooledVariance = function pooledVariance(samples, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var sum = 0;\n    var length = 0, l = samples.length;\n    for (var i = 0; i < l; i++) {\n        var values = samples[i];\n        var vari = exports.variance(values);\n\n        sum += (values.length - 1) * vari;\n\n        if (unbiased)\n            length += values.length - 1;\n        else\n            length += values.length;\n    }\n    return sum / length;\n};\n\nexports.mode = function mode(values) {\n    var l = values.length,\n        itemCount = new Array(l),\n        i;\n    for (i = 0; i < l; i++) {\n        itemCount[i] = 0;\n    }\n    var itemArray = new Array(l);\n    var count = 0;\n\n    for (i = 0; i < l; i++) {\n        var index = itemArray.indexOf(values[i]);\n        if (index >= 0)\n            itemCount[index]++;\n        else {\n            itemArray[count] = values[i];\n            itemCount[count] = 1;\n            count++;\n        }\n    }\n\n    var maxValue = 0, maxIndex = 0;\n    for (i = 0; i < count; i++) {\n        if (itemCount[i] > maxValue) {\n            maxValue = itemCount[i];\n            maxIndex = i;\n        }\n    }\n\n    return itemArray[maxIndex];\n};\n\nexports.covariance = function covariance(vector1, vector2, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var mean1 = exports.mean(vector1);\n    var mean2 = exports.mean(vector2);\n\n    if (vector1.length !== vector2.length)\n        throw 'Vectors do not have the same dimensions';\n\n    var cov = 0, l = vector1.length;\n    for (var i = 0; i < l; i++) {\n        var x = vector1[i] - mean1;\n        var y = vector2[i] - mean2;\n        cov += x * y;\n    }\n\n    if (unbiased)\n        return cov / (l - 1);\n    else\n        return cov / l;\n};\n\nexports.skewness = function skewness(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n\n    var s2 = 0, s3 = 0, l = values.length;\n    for (var i = 0; i < l; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s3 += dev * dev * dev;\n    }\n    var m2 = s2 / l;\n    var m3 = s3 / l;\n\n    var g = m3 / (Math.pow(m2, 3 / 2.0));\n    if (unbiased) {\n        var a = Math.sqrt(l * (l - 1));\n        var b = l - 2;\n        return (a / b) * g;\n    } else {\n        return g;\n    }\n};\n\nexports.kurtosis = function kurtosis(values, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var theMean = exports.mean(values);\n    var n = values.length, s2 = 0, s4 = 0;\n\n    for (var i = 0; i < n; i++) {\n        var dev = values[i] - theMean;\n        s2 += dev * dev;\n        s4 += dev * dev * dev * dev;\n    }\n    var m2 = s2 / n;\n    var m4 = s4 / n;\n\n    if (unbiased) {\n        var v = s2 / (n - 1);\n        var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n        var b = s4 / (v * v);\n        var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n\n        return a * b - 3 * c;\n    } else {\n        return m4 / (m2 * m2) - 3;\n    }\n};\n\nexports.entropy = function entropy(values, eps) {\n    if (typeof (eps) === 'undefined') eps = 0;\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * Math.log(values[i] + eps);\n    return -sum;\n};\n\nexports.weightedMean = function weightedMean(values, weights) {\n    var sum = 0, l = values.length;\n    for (var i = 0; i < l; i++)\n        sum += values[i] * weights[i];\n    return sum;\n};\n\nexports.weightedStandardDeviation = function weightedStandardDeviation(values, weights) {\n    return Math.sqrt(exports.weightedVariance(values, weights));\n};\n\nexports.weightedVariance = function weightedVariance(values, weights) {\n    var theMean = exports.weightedMean(values, weights);\n    var vari = 0, l = values.length;\n    var a = 0, b = 0;\n\n    for (var i = 0; i < l; i++) {\n        var z = values[i] - theMean;\n        var w = weights[i];\n\n        vari += w * (z * z);\n        b += w;\n        a += w * w;\n    }\n\n    return vari * (b / (b * b - a));\n};\n\nexports.center = function center(values, inPlace) {\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n\n    var result = values;\n    if (!inPlace)\n        result = [].concat(values);\n\n    var theMean = exports.mean(result), l = result.length;\n    for (var i = 0; i < l; i++)\n        result[i] -= theMean;\n};\n\nexports.standardize = function standardize(values, standardDev, inPlace) {\n    if (typeof (standardDev) === 'undefined') standardDev = exports.standardDeviation(values);\n    if (typeof (inPlace) === 'undefined') inPlace = false;\n    var l = values.length;\n    var result = inPlace ? values : new Array(l);\n    for (var i = 0; i < l; i++)\n        result[i] = values[i] / standardDev;\n    return result;\n};\n\nexports.cumulativeSum = function cumulativeSum(array) {\n    var l = array.length;\n    var result = new Array(l);\n    result[0] = array[0];\n    for (var i = 1; i < l; i++)\n        result[i] = result[i - 1] + array[i];\n    return result;\n};\n","'use strict';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param xs\n * @param ys\n */\n\nfunction uniqueX(xs, ys) {\n    if (xs.length < 2) return;\n\n    var current = xs[0];\n    var counter = 0;\n\n    for (var i = 1; i < xs.length; i++) {\n        if (current !== xs[i]) {\n            counter++;\n            current = xs[i];\n            xs[counter] = xs[i];\n            if (i !== counter) {\n                ys[counter] = 0;\n            }\n        }\n        if (i !== counter) {\n            ys[counter] += ys[i];\n        }\n\n    }\n\n    xs.length = counter + 1;\n    ys.length = counter + 1;\n}\n\nmodule.exports = uniqueX;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction _interopDefault (ex) { return (ex && (typeof ex === 'object') && 'default' in ex) ? ex['default'] : ex; }\n\nvar min = _interopDefault(require('ml-array-min'));\nvar max = _interopDefault(require('ml-array-max'));\nvar equallySpaced = _interopDefault(require('ml-array-xy-equally-spaced'));\nvar Util = _interopDefault(require('ml-array-utils'));\nvar jcampconverter = require('jcampconverter');\nvar xyParser = require('xy-parser');\n\nconst ABSORBANCE = 1;\nconst TRANSMITTANCE = 2;\nconst PERCENT_TRANSMITTANCE = 3;\n\nfunction getKind(kind = '') {\n  if (typeof kind === 'number') {\n    if (kind < 1 || kind > 2) {\n      throw new Error('kind should either be 1 or 2');\n    }\n    return kind;\n  }\n  if (kind.match(/abs/i)) {\n    return ABSORBANCE;\n  }\n  return TRANSMITTANCE;\n}\n\n/**\n * Create an object of Chromatogram\n * @return {object}\n */\nfunction toJSON() {\n  return {\n    wavelength: this.wavelength,\n    transmittance: this.transmittance,\n    peaks: this.peaks\n  };\n}\n\nfunction getAnnotations(spectrum, options = {}) {\n  const { fillColor = 'green', strokeColor = 'red', creationFct } = options;\n  const peaks = spectrum.peaks;\n  if (!peaks) return [];\n  let annotations = peaks.map((peak) => {\n    var annotation = {\n      line: 1,\n      type: 'rect',\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    switch (spectrum.mode) {\n      case ABSORBANCE:\n        annotationAbsorbance(annotation, peak);\n        break;\n      case TRANSMITTANCE:\n        annotationTransmittance(annotation, peak, 1);\n        break;\n      case PERCENT_TRANSMITTANCE:\n        annotationTransmittance(annotation, peak, 100);\n        break;\n      default:\n    }\n    return annotation;\n  });\n\n  return annotations;\n}\n\nfunction annotationTransmittance(annotation, peak, factor = 1) {\n  annotation.label = [\n    {\n      text: String(peak.wavelength),\n      size: '12px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavelength,\n        y: peak.transmittance * factor,\n        dy: '23px'\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.transmittance * factor,\n      dy: '10px',\n      dx: '-1px'\n    },\n    {\n      x: peak.wavelength,\n      y: peak.transmittance * factor,\n      dy: '5px',\n      dx: '1px'\n    }\n  ];\n}\n\nfunction annotationAbsorbance(annotation, peak) {\n  annotation.label = [\n    {\n      text: String(peak.wavelength),\n      size: '18px',\n      anchor: 'middle',\n      color: 'red',\n      position: {\n        x: peak.wavelength,\n        y: peak.absorbance,\n        dy: '-15px'\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.absorbance,\n      dy: '-10px',\n      dx: '-1px'\n    },\n    {\n      x: peak.wavelength,\n      y: peak.absorbance,\n      dy: '-5px',\n      dx: '1px'\n    }\n  ];\n}\n\nfunction getData(spectrum) {\n  switch (spectrum.mode) {\n    case ABSORBANCE:\n      return spectrum.getAbsorbance();\n    case TRANSMITTANCE:\n      return spectrum.getTransmittance();\n    case PERCENT_TRANSMITTANCE:\n      return spectrum.getPercentTransmittance();\n    default:\n      return {};\n  }\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {object} peak\n */\n\nfunction addPeak(spectrum, peak = {}) {\n  if (!peak.wavelength) {\n    throw new Error('addPeak: peak mush have wavelength property');\n  }\n  if (!peak.absorbance && !peak.transmittance) {\n    throw new Error(\n      'addPeak: peak mush have either absorbance of transmittance property'\n    );\n  }\n  const {\n    wavelength,\n    transmittance = 10 ** -peak.absorbance,\n    absorbance = -Math.log10(peak.transmittance)\n  } = peak;\n\n  for (let existing of spectrum.peaks) {\n    if (Number(existing.wavelength) === wavelength) return existing;\n  }\n  spectrum.peaks.push({\n    wavelength: wavelength,\n    transmittance: transmittance,\n    absorbance: absorbance\n  });\n  return peak;\n}\n\n/**\n *\n * @param {Spectrum} spectrum\n * @param {number} targetWavelength\n * @param {object} [options]\n * @param {number} [options.range=0] Search in a range around the targetWavelength\n * @param {boolean} [options.optimize=false] Search for the closest peak to the targetWavelength\n */\n\nfunction peakPicking(spectrum, targetWavelength, options = {}) {\n  const { range = 0, optimize = false } = options;\n\n  // find the peak that is the closest to the click\n  let bestPeak = getClosest(spectrum, targetWavelength);\n\n  if (optimize) {\n    findClosest(spectrum, bestPeak);\n  } else if (range) {\n    bestInRange(spectrum, bestPeak, targetWavelength, range);\n  }\n\n  return addPeak(spectrum, bestPeak);\n}\n\nfunction getClosest(spectrum, targetWavelength) {\n  let bestPeak = {\n    transmittance: spectrum.transmittance[0],\n    absorbance: spectrum.absorbance[0],\n    wavelength: spectrum.wavelength[0],\n    index: 0\n  };\n\n  let error = Math.abs(targetWavelength - bestPeak.wavelength);\n  for (let i = 1; i < spectrum.wavelength.length; i++) {\n    let newError = Math.abs(targetWavelength - spectrum.wavelength[i]);\n    if (newError < error) {\n      error = newError;\n      setBestPeak(spectrum, bestPeak, i);\n    }\n  }\n  return bestPeak;\n}\n\nfunction bestInRange(spectrum, bestPeak, targetWavelength, range) {\n  // we search the minimum based on wavelength +/- range\n  for (let i = 0; i < spectrum.wavelength.length; i++) {\n    if (Math.abs(spectrum.wavelength[i] - targetWavelength) <= range) {\n      if (spectrum.transmittance[i] < bestPeak.transmittance) {\n        setBestPeak(spectrum, bestPeak, i);\n      }\n    }\n  }\n}\n\nfunction findClosest(spectrum, bestPeak) {\n  let index = bestPeak.index;\n  let previousIndex;\n  while (index !== previousIndex) {\n    previousIndex = index;\n    if (index > 0 && spectrum.absorbance[index - 1] > bestPeak.absorbance) {\n      index--;\n      setBestPeak(spectrum, bestPeak, index);\n    } else if (\n      index < spectrum.wavelength.length - 1 &&\n      spectrum.absorbance[index + 1] > bestPeak.absorbance\n    ) {\n      index++;\n      setBestPeak(spectrum, bestPeak, index);\n    }\n  }\n}\n\nfunction setBestPeak(spectrum, bestPeak, index) {\n  bestPeak.index = index;\n  bestPeak.wavelength = spectrum.wavelength[index];\n  bestPeak.absorbance = spectrum.absorbance[index];\n  bestPeak.transmittance = spectrum.transmittance[index];\n}\n\nfunction getNormalized(spectrum, options = {}) {\n  const {\n    from = 800,\n    to = 4000,\n    numberOfPoints = 1000,\n    applySNV = true\n  } = options;\n  let y = applySNV ? Util.SNV(spectrum.absorbance) : spectrum.absorbance;\n  return equallySpaced(\n    { x: spectrum.wavelength, y },\n    { from, to, numberOfPoints }\n  );\n}\n\n/**\n * Class allowing manipulate one UV spectrum\n * @class spectrum\n * @param {object} [json={}] - object containing a spectrum\n * @param {Array} [json.wavelength=[]] - wavelength\n * @param {Array} [json.y=[]] - y values\n * @param {integer} [json.kind=spectrum.TRANSMITTANCE] - either spectrum.ABSORBANCE or spectrum.TRANSMITTANCE\n */\nclass Spectrum {\n  constructor(json = {}) {\n    this.wavelength = json.wavelength || [];\n    this.absorbance = json.absorbance || [];\n    this.transmittance = json.transmittance || [];\n    this.mode = PERCENT_TRANSMITTANCE;\n    this.peaks = [];\n    check(this);\n  }\n\n  /**\n   *\n   * @param {Array} [peaks=[]] array of peaks. Peaks are composed of transmittance, wavelength, kind\n   */\n  setPeaks(peaks = []) {\n    this.peaks = peaks;\n  }\n\n  setMode(mode) {\n    if (mode < 1 || mode > 3) {\n      throw new Error(\n        'Mode should be either 1 (absorbance), 2 (transmittance) or 3 (percent transmittance)'\n      );\n    }\n    this.mode = mode;\n  }\n\n  peakPicking(targetWavelength, options = {}) {\n    peakPicking(this, targetWavelength, options);\n  }\n\n  getAbsorbance() {\n    return { x: this.wavelength, y: this.absorbance };\n  }\n\n  getTransmittance() {\n    return { x: this.wavelength, y: this.transmittance };\n  }\n\n  getPercentTransmittance() {\n    let data = this.getTransmittance();\n    return {\n      x: data.x,\n      y: data.y.map((transmittance) => transmittance * 100)\n    };\n  }\n\n  getYLabel() {\n    switch (this.mode) {\n      case ABSORBANCE:\n        return 'Absorbance';\n      case TRANSMITTANCE:\n        return 'Transmittance';\n      case PERCENT_TRANSMITTANCE:\n        return 'Transmittance [%]';\n      default:\n        return '';\n    }\n  }\n}\n\nSpectrum.prototype.toJSON = toJSON;\nSpectrum.prototype.getAnnotations = function (options) {\n  return getAnnotations(this, options);\n};\nSpectrum.prototype.getData = function (options) {\n  return getData(this, options);\n};\nSpectrum.prototype.getNormalized = function (options) {\n  return getNormalized(this, options);\n};\n\nfunction check(spectrum) {\n  if (spectrum.transmittance.length > 0 && spectrum.absorbance.length === 0) {\n    spectrum.absorbance = spectrum.transmittance.map(\n      (transmittance) => -Math.log10(transmittance)\n    );\n  }\n\n  if (spectrum.absorbance.length > 0 && spectrum.transmittance.length === 0) {\n    spectrum.transmittance = spectrum.absorbance.map(\n      (absorbance) => 10 ** -absorbance\n    );\n  }\n\n  if (spectrum.wavelength.length > 0) {\n    spectrum.minWavelength = min(spectrum.wavelength);\n  }\n  if (spectrum.wavelength.length > 0) {\n    spectrum.maxWavelength = max(spectrum.wavelength);\n  }\n  if (spectrum.absorbance.length > 0) {\n    spectrum.minAbsorbance = min(spectrum.absorbance);\n  }\n  if (spectrum.absorbance.length > 0) {\n    spectrum.maxAbsorbance = max(spectrum.absorbance);\n  }\n  if (spectrum.transmittance.length > 0) {\n    spectrum.minTransmittance = min(spectrum.transmittance);\n  }\n  if (spectrum.transmittance.length > 0) {\n    spectrum.maxTransmittance = max(spectrum.transmittance);\n  }\n}\n\nclass Spectra {\n  constructor(options = {}) {\n    this.from = options.from === undefined ? 800 : options.from;\n    this.to = options.to === undefined ? 4000 : options.to;\n    this.numberOfPoints =\n      options.numberOfPoints === undefined ? 1000 : options.numberOfPoints;\n    this.applySNV = options.applySNV === undefined ? true : options.applySNV;\n    this.data = [];\n    this.mode = PERCENT_TRANSMITTANCE;\n  }\n\n  /**\n   * Add a spectrum\n   * @param {Spectrum} spectrum\n   * @param {string} id\n   * @param {object} [meta={}]\n   * @param {string} [meta.color]\n   */\n  addSpectrum(spectrum, id, meta = {}) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.data.length;\n    this.data[index] = {\n      normalized: spectrum.getNormalized(spectrum, {\n        from: this.from,\n        to: this.to,\n        numberOfPoints: this.numberOfPoints\n      }),\n      spectrum,\n      id,\n      meta\n    };\n  }\n\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.data.splice(index, 1);\n  }\n\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.data.length; i++) {\n      let spectrum = this.data[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n\n  getNormalizedData() {\n    if (!this.data || !this.data[0]) return {};\n    let matrix = [];\n    let meta = [];\n    let ids = [];\n    for (let datum of this.data) {\n      ids.push(datum.id);\n      matrix.push(datum.normalized.y);\n      meta.push(datum.meta);\n    }\n    let x = this.data[0].normalized.x;\n    return { ids, matrix, meta, x };\n  }\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp) {\n  const data = jcampconverter.convert(jcamp, { xy: true });\n  let spectrum = data.spectra[0].data[0];\n  if (getKind(data.spectra[0].yUnit) === TRANSMITTANCE) {\n    return new Spectrum({\n      wavelength: spectrum.x,\n      transmittance: spectrum.y,\n      absorbance: []\n    });\n  } else {\n    return new Spectrum({\n      wavelength: spectrum.x,\n      transmittance: [],\n      absorbance: spectrum.y\n    });\n  }\n}\n\n/**\n * Creates a new Chromatogram element based in a Txt string\n * @param {string} text - String containing the data as CSV or TSV\n * @param {object} [options] - Options object for the parser\n * @param {string} [options.kind] - Absorbance or Transmisstance\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromText(text, options = {}) {\n  options = Object.assign({}, options, { arrayType: 'xxyy' });\n  const data = xyParser.parseXY(text, options);\n  if (getKind(options.kind) === TRANSMITTANCE) {\n    return new Spectrum({\n      wavelength: data[0],\n      transmittance: data[1],\n      absorbance: []\n    });\n  } else {\n    return new Spectrum({\n      wavelength: data[0],\n      transmisttance: [],\n      absorbance: data[1]\n    });\n  }\n}\n\nexports.ABSORBANCE = ABSORBANCE;\nexports.PERCENT_TRANSMITTANCE = PERCENT_TRANSMITTANCE;\nexports.Spectra = Spectra;\nexports.Spectrum = Spectrum;\nexports.TRANSMITTANCE = TRANSMITTANCE;\nexports.fromJcamp = fromJcamp;\nexports.fromText = fromText;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the minimum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction min(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var min = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] < min) min = input[i];\n  }\n\n  return min;\n}\n\nexport default min;\n","import isArray from 'is-any-array';\n\n/**\n * Computes the maximum of the given values\n * @param {Array<number>} input\n * @return {number}\n */\n\nfunction max(input) {\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  if (input.length === 0) {\n    throw new TypeError('input must not be empty');\n  }\n\n  var max = input[0];\n\n  for (var i = 1; i < input.length; i++) {\n    if (input[i] > max) max = input[i];\n  }\n\n  return max;\n}\n\nexport default max;\n","'use strict';\n\nmodule.exports = exports = require('./ArrayUtils');\n\nexports.getEquallySpacedData = require('./getEquallySpaced').getEquallySpacedData;\nexports.SNV = require('./snv').SNV;\n","'use strict';\n\nconst Stat = require('ml-stat').array;\n/**\n * Function that returns an array of points given 1D array as follows:\n *\n * [x1, y1, .. , x2, y2, ..]\n *\n * And receive the number of dimensions of each point.\n * @param array\n * @param dimensions\n * @returns {Array} - Array of points.\n */\nfunction coordArrayToPoints(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var length = array.length / dimensions;\n    var pointsArr = new Array(length);\n\n    var k = 0;\n    for (var i = 0; i < array.length; i += dimensions) {\n        var point = new Array(dimensions);\n        for (var j = 0; j < dimensions; ++j) {\n            point[j] = array[i + j];\n        }\n\n        pointsArr[k] = point;\n        k++;\n    }\n\n    return pointsArr;\n}\n\n\n/**\n * Function that given an array as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * Returns an array as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * And receives the number of dimensions of each coordinate.\n * @param array\n * @param dimensions\n * @returns {Array} - Matrix of coordinates\n */\nfunction coordArrayToCoordMatrix(array, dimensions) {\n    if (array.length % dimensions !== 0) {\n        throw new RangeError('Dimensions number must be accordance with the size of the array.');\n    }\n\n    var coordinatesArray = new Array(dimensions);\n    var points = array.length / dimensions;\n    for (var i = 0; i < coordinatesArray.length; i++) {\n        coordinatesArray[i] = new Array(points);\n    }\n\n    for (i = 0; i < array.length; i += dimensions) {\n        for (var j = 0; j < dimensions; ++j) {\n            var currentPoint = Math.floor(i / dimensions);\n            coordinatesArray[j][currentPoint] = array[i + j];\n        }\n    }\n\n    return coordinatesArray;\n}\n\n/**\n * Function that receives a coordinate matrix as follows:\n * [[x1, x2, ..], [y1, y2, ..], [ .. ]]\n *\n * Returns an array of coordinates as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param coordMatrix\n * @returns {Array}\n */\nfunction coordMatrixToCoordArray(coordMatrix) {\n    var coodinatesArray = new Array(coordMatrix.length * coordMatrix[0].length);\n    var k = 0;\n    for (var i = 0; i < coordMatrix[0].length; ++i) {\n        for (var j = 0; j < coordMatrix.length; ++j) {\n            coodinatesArray[k] = coordMatrix[j][i];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Tranpose a matrix, this method is for coordMatrixToPoints and\n * pointsToCoordMatrix, that because only transposing the matrix\n * you can change your representation.\n *\n * @param matrix\n * @returns {Array}\n */\nfunction transpose(matrix) {\n    var resultMatrix = new Array(matrix[0].length);\n    for (var i = 0; i < resultMatrix.length; ++i) {\n        resultMatrix[i] = new Array(matrix.length);\n    }\n\n    for (i = 0; i < matrix.length; ++i) {\n        for (var j = 0; j < matrix[0].length; ++j) {\n            resultMatrix[j][i] = matrix[i][j];\n        }\n    }\n\n    return resultMatrix;\n}\n\n/**\n * Function that transform an array of points into a coordinates array\n * as follows:\n * [x1, y1, .. , x2, y2, ..]\n *\n * @param points\n * @returns {Array}\n */\nfunction pointsToCoordArray(points) {\n    var coodinatesArray = new Array(points.length * points[0].length);\n    var k = 0;\n    for (var i = 0; i < points.length; ++i) {\n        for (var j = 0; j < points[0].length; ++j) {\n            coodinatesArray[k] = points[i][j];\n            ++k;\n        }\n    }\n\n    return coodinatesArray;\n}\n\n/**\n * Apply the dot product between the smaller vector and a subsets of the\n * largest one.\n *\n * @param firstVector\n * @param secondVector\n * @returns {Array} each dot product of size of the difference between the\n *                  larger and the smallest one.\n */\nfunction applyDotProduct(firstVector, secondVector) {\n    var largestVector, smallestVector;\n    if (firstVector.length <= secondVector.length) {\n        smallestVector = firstVector;\n        largestVector = secondVector;\n    } else {\n        smallestVector = secondVector;\n        largestVector = firstVector;\n    }\n\n    var difference = largestVector.length - smallestVector.length + 1;\n    var dotProductApplied = new Array(difference);\n\n    for (var i = 0; i < difference; ++i) {\n        var sum = 0;\n        for (var j = 0; j < smallestVector.length; ++j) {\n            sum += smallestVector[j] * largestVector[i + j];\n        }\n        dotProductApplied[i] = sum;\n    }\n\n    return dotProductApplied;\n}\n/**\n * To scale the input array between the specified min and max values. The operation is performed inplace\n * if the options.inplace is specified. If only one of the min or max parameters is specified, then the scaling\n * will multiply the input array by min/min(input) or max/max(input)\n * @param input\n * @param options\n * @returns {*}\n */\nfunction scale(input, options = {}) {\n    const {\n        min,\n        max\n    } = options;\n\n    var y = options.inPlace ? input : (new Array(input.length));\n    var minMax = Stat.minMax(input);\n\n    if (typeof max === 'number') {\n        if (typeof min === 'number') {\n            let factor = (max - min) / (minMax.max - minMax.min);\n            for (let i = 0; i < y.length; i++) {\n                y[i] = (input[i] - minMax.min) * factor + min;\n            }\n        } else if (minMax.max !== 0) {\n            let factor = max / minMax.max;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n        } else {\n            options.min = minMax.min;\n            y = scale(input, options);\n        }\n    } else if (typeof min === 'number') {\n        if (minMax.min !== 0) {\n            let factor = min / minMax.min;\n            for (let i = 0; i < y.length; i++) {\n                y[i] = input[i] * factor;\n            }\n\n        } else {\n            options.max = minMax.max;\n            y = scale(input, options);\n        }\n    }\n    return y;\n}\n\nmodule.exports = {\n    coordArrayToPoints: coordArrayToPoints,\n    coordArrayToCoordMatrix: coordArrayToCoordMatrix,\n    coordMatrixToCoordArray: coordMatrixToCoordArray,\n    coordMatrixToPoints: transpose,\n    pointsToCoordArray: pointsToCoordArray,\n    pointsToCoordMatrix: transpose,\n    applyDotProduct: applyDotProduct,\n    scale: scale\n};\n\n","'use strict';\n\nvar arrayStat = require('./array');\n\nfunction compareNumbers(a, b) {\n    return a - b;\n}\n\nexports.max = function max(matrix) {\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return max;\n};\n\nexports.min = function min(matrix) {\n    var min = Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n        }\n    }\n    return min;\n};\n\nexports.minMax = function minMax(matrix) {\n    var min = Infinity;\n    var max = -Infinity;\n    for (var i = 0; i < matrix.length; i++) {\n        for (var j = 0; j < matrix[i].length; j++) {\n            if (matrix[i][j] < min) min = matrix[i][j];\n            if (matrix[i][j] > max) max = matrix[i][j];\n        }\n    }\n    return {\n        min:min,\n        max:max\n    };\n};\n\nexports.entropy = function entropy(matrix, eps) {\n    if (typeof (eps) === 'undefined') {\n        eps = 0;\n    }\n    var sum = 0,\n        l1 = matrix.length,\n        l2 = matrix[0].length;\n    for (var i = 0; i < l1; i++) {\n        for (var j = 0; j < l2; j++) {\n            sum += matrix[i][j] * Math.log(matrix[i][j] + eps);\n        }\n    }\n    return -sum;\n};\n\nexports.mean = function mean(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theMean, N, i, j;\n\n    if (dimension === -1) {\n        theMean = [0];\n        N = rows * cols;\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theMean[0] += matrix[i][j];\n            }\n        }\n        theMean[0] /= N;\n    } else if (dimension === 0) {\n        theMean = new Array(cols);\n        N = rows;\n        for (j = 0; j < cols; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theMean[j] += matrix[i][j];\n            }\n            theMean[j] /= N;\n        }\n    } else if (dimension === 1) {\n        theMean = new Array(rows);\n        N = cols;\n        for (j = 0; j < rows; j++) {\n            theMean[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theMean[j] += matrix[j][i];\n            }\n            theMean[j] /= N;\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theMean;\n};\n\nexports.sum = function sum(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theSum, i, j;\n\n    if (dimension === -1) {\n        theSum = [0];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theSum[0] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theSum = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < rows; i++) {\n                theSum[j] += matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theSum = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theSum[j] = 0;\n            for (i = 0; i < cols; i++) {\n                theSum[j] += matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theSum;\n};\n\nexports.product = function product(matrix, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        theProduct, i, j;\n\n    if (dimension === -1) {\n        theProduct = [1];\n        for (i = 0; i < rows; i++) {\n            for (j = 0; j < cols; j++) {\n                theProduct[0] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 0) {\n        theProduct = new Array(cols);\n        for (j = 0; j < cols; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < rows; i++) {\n                theProduct[j] *= matrix[i][j];\n            }\n        }\n    } else if (dimension === 1) {\n        theProduct = new Array(rows);\n        for (j = 0; j < rows; j++) {\n            theProduct[j] = 1;\n            for (i = 0; i < cols; i++) {\n                theProduct[j] *= matrix[j][i];\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n    return theProduct;\n};\n\nexports.standardDeviation = function standardDeviation(matrix, means, unbiased) {\n    var vari = exports.variance(matrix, means, unbiased), l = vari.length;\n    for (var i = 0; i < l; i++) {\n        vari[i] = Math.sqrt(vari[i]);\n    }\n    return vari;\n};\n\nexports.variance = function variance(matrix, means, unbiased) {\n    if (typeof (unbiased) === 'undefined') {\n        unbiased = true;\n    }\n    means = means || exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum1 = 0, sum2 = 0, x = 0;\n        for (var i = 0; i < rows; i++) {\n            x = matrix[i][j] - means[j];\n            sum1 += x;\n            sum2 += x * x;\n        }\n        if (unbiased) {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / (rows - 1);\n        } else {\n            vari[j] = (sum2 - ((sum1 * sum1) / rows)) / rows;\n        }\n    }\n    return vari;\n};\n\nexports.median = function median(matrix) {\n    var rows = matrix.length, cols = matrix[0].length;\n    var medians = new Array(cols);\n\n    for (var i = 0; i < cols; i++) {\n        var data = new Array(rows);\n        for (var j = 0; j < rows; j++) {\n            data[j] = matrix[j][i];\n        }\n        data.sort(compareNumbers);\n        var N = data.length;\n        if (N % 2 === 0) {\n            medians[i] = (data[N / 2] + data[(N / 2) - 1]) * 0.5;\n        } else {\n            medians[i] = data[Math.floor(N / 2)];\n        }\n    }\n    return medians;\n};\n\nexports.mode = function mode(matrix) {\n    var rows = matrix.length,\n        cols = matrix[0].length,\n        modes = new Array(cols),\n        i, j;\n    for (i = 0; i < cols; i++) {\n        var itemCount = new Array(rows);\n        for (var k = 0; k < rows; k++) {\n            itemCount[k] = 0;\n        }\n        var itemArray = new Array(rows);\n        var count = 0;\n\n        for (j = 0; j < rows; j++) {\n            var index = itemArray.indexOf(matrix[j][i]);\n            if (index >= 0) {\n                itemCount[index]++;\n            } else {\n                itemArray[count] = matrix[j][i];\n                itemCount[count] = 1;\n                count++;\n            }\n        }\n\n        var maxValue = 0, maxIndex = 0;\n        for (j = 0; j < count; j++) {\n            if (itemCount[j] > maxValue) {\n                maxValue = itemCount[j];\n                maxIndex = j;\n            }\n        }\n\n        modes[i] = itemArray[maxIndex];\n    }\n    return modes;\n};\n\nexports.skewness = function skewness(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, l = means.length;\n    var skew = new Array(l);\n\n    for (var j = 0; j < l; j++) {\n        var s2 = 0, s3 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s3 += dev * dev * dev;\n        }\n\n        var m2 = s2 / n;\n        var m3 = s3 / n;\n        var g = m3 / Math.pow(m2, 3 / 2);\n\n        if (unbiased) {\n            var a = Math.sqrt(n * (n - 1));\n            var b = n - 2;\n            skew[j] = (a / b) * g;\n        } else {\n            skew[j] = g;\n        }\n    }\n    return skew;\n};\n\nexports.kurtosis = function kurtosis(matrix, unbiased) {\n    if (typeof (unbiased) === 'undefined') unbiased = true;\n    var means = exports.mean(matrix);\n    var n = matrix.length, m = matrix[0].length;\n    var kurt = new Array(m);\n\n    for (var j = 0; j < m; j++) {\n        var s2 = 0, s4 = 0;\n        for (var i = 0; i < n; i++) {\n            var dev = matrix[i][j] - means[j];\n            s2 += dev * dev;\n            s4 += dev * dev * dev * dev;\n        }\n        var m2 = s2 / n;\n        var m4 = s4 / n;\n\n        if (unbiased) {\n            var v = s2 / (n - 1);\n            var a = (n * (n + 1)) / ((n - 1) * (n - 2) * (n - 3));\n            var b = s4 / (v * v);\n            var c = ((n - 1) * (n - 1)) / ((n - 2) * (n - 3));\n            kurt[j] = a * b - 3 * c;\n        } else {\n            kurt[j] = m4 / (m2 * m2) - 3;\n        }\n    }\n    return kurt;\n};\n\nexports.standardError = function standardError(matrix) {\n    var samples = matrix.length;\n    var standardDeviations = exports.standardDeviation(matrix);\n    var l = standardDeviations.length;\n    var standardErrors = new Array(l);\n    var sqrtN = Math.sqrt(samples);\n\n    for (var i = 0; i < l; i++) {\n        standardErrors[i] = standardDeviations[i] / sqrtN;\n    }\n    return standardErrors;\n};\n\nexports.covariance = function covariance(matrix, dimension) {\n    return exports.scatter(matrix, undefined, dimension);\n};\n\nexports.scatter = function scatter(matrix, divisor, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    if (typeof (divisor) === 'undefined') {\n        if (dimension === 0) {\n            divisor = matrix.length - 1;\n        } else if (dimension === 1) {\n            divisor = matrix[0].length - 1;\n        }\n    }\n    var means = exports.mean(matrix, dimension);\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, s, k;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                s /= divisor;\n                cov[i][j] = s;\n                cov[j][i] = s;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n\nexports.correlation = function correlation(matrix) {\n    var means = exports.mean(matrix),\n        standardDeviations = exports.standardDeviation(matrix, true, means),\n        scores = exports.zScores(matrix, means, standardDeviations),\n        rows = matrix.length,\n        cols = matrix[0].length,\n        i, j;\n\n    var cor = new Array(cols);\n    for (i = 0; i < cols; i++) {\n        cor[i] = new Array(cols);\n    }\n    for (i = 0; i < cols; i++) {\n        for (j = i; j < cols; j++) {\n            var c = 0;\n            for (var k = 0, l = scores.length; k < l; k++) {\n                c += scores[k][j] * scores[k][i];\n            }\n            c /= rows - 1;\n            cor[i][j] = c;\n            cor[j][i] = c;\n        }\n    }\n    return cor;\n};\n\nexports.zScores = function zScores(matrix, means, standardDeviations) {\n    means = means || exports.mean(matrix);\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix, true, means);\n    return exports.standardize(exports.center(matrix, means, false), standardDeviations, true);\n};\n\nexports.center = function center(matrix, means, inPlace) {\n    means = means || exports.mean(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var row = result[i];\n        for (j = 0, jj = row.length; j < jj; j++) {\n            row[j] = matrix[i][j] - means[j];\n        }\n    }\n    return result;\n};\n\nexports.standardize = function standardize(matrix, standardDeviations, inPlace) {\n    if (typeof (standardDeviations) === 'undefined') standardDeviations = exports.standardDeviation(matrix);\n    var result = matrix,\n        l = matrix.length,\n        i, j, jj;\n\n    if (!inPlace) {\n        result = new Array(l);\n        for (i = 0; i < l; i++) {\n            result[i] = new Array(matrix[i].length);\n        }\n    }\n\n    for (i = 0; i < l; i++) {\n        var resultRow = result[i];\n        var sourceRow = matrix[i];\n        for (j = 0, jj = resultRow.length; j < jj; j++) {\n            if (standardDeviations[j] !== 0 && !isNaN(standardDeviations[j])) {\n                resultRow[j] = sourceRow[j] / standardDeviations[j];\n            }\n        }\n    }\n    return result;\n};\n\nexports.weightedVariance = function weightedVariance(matrix, weights) {\n    var means = exports.mean(matrix);\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length;\n    var vari = new Array(cols);\n\n    for (var j = 0; j < cols; j++) {\n        var sum = 0;\n        var a = 0, b = 0;\n\n        for (var i = 0; i < rows; i++) {\n            var z = matrix[i][j] - means[j];\n            var w = weights[i];\n\n            sum += w * (z * z);\n            b += w;\n            a += w * w;\n        }\n\n        vari[j] = sum * (b / (b * b - a));\n    }\n\n    return vari;\n};\n\nexports.weightedMean = function weightedMean(matrix, weights, dimension) {\n    if (typeof (dimension) === 'undefined') {\n        dimension = 0;\n    }\n    var rows = matrix.length;\n    if (rows === 0) return [];\n    var cols = matrix[0].length,\n        means, i, ii, j, w, row;\n\n    if (dimension === 0) {\n        means = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            means[i] = 0;\n        }\n        for (i = 0; i < rows; i++) {\n            row = matrix[i];\n            w = weights[i];\n            for (j = 0; j < cols; j++) {\n                means[j] += row[j] * w;\n            }\n        }\n    } else if (dimension === 1) {\n        means = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            means[i] = 0;\n        }\n        for (j = 0; j < rows; j++) {\n            row = matrix[j];\n            w = weights[j];\n            for (i = 0; i < cols; i++) {\n                means[j] += row[i] * w;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    var weightSum = arrayStat.sum(weights);\n    if (weightSum !== 0) {\n        for (i = 0, ii = means.length; i < ii; i++) {\n            means[i] /= weightSum;\n        }\n    }\n    return means;\n};\n\nexports.weightedCovariance = function weightedCovariance(matrix, weights, means, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    var s1 = 0, s2 = 0;\n    for (var i = 0, ii = weights.length; i < ii; i++) {\n        s1 += weights[i];\n        s2 += weights[i] * weights[i];\n    }\n    var factor = s1 / (s1 * s1 - s2);\n    return exports.weightedScatter(matrix, weights, means, factor, dimension);\n};\n\nexports.weightedScatter = function weightedScatter(matrix, weights, means, factor, dimension) {\n    dimension = dimension || 0;\n    means = means || exports.weightedMean(matrix, weights, dimension);\n    if (typeof (factor) === 'undefined') {\n        factor = 1;\n    }\n    var rows = matrix.length;\n    if (rows === 0) {\n        return [[]];\n    }\n    var cols = matrix[0].length,\n        cov, i, j, k, s;\n\n    if (dimension === 0) {\n        cov = new Array(cols);\n        for (i = 0; i < cols; i++) {\n            cov[i] = new Array(cols);\n        }\n        for (i = 0; i < cols; i++) {\n            for (j = i; j < cols; j++) {\n                s = 0;\n                for (k = 0; k < rows; k++) {\n                    s += weights[k] * (matrix[k][j] - means[j]) * (matrix[k][i] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else if (dimension === 1) {\n        cov = new Array(rows);\n        for (i = 0; i < rows; i++) {\n            cov[i] = new Array(rows);\n        }\n        for (i = 0; i < rows; i++) {\n            for (j = i; j < rows; j++) {\n                s = 0;\n                for (k = 0; k < cols; k++) {\n                    s += weights[k] * (matrix[j][k] - means[j]) * (matrix[i][k] - means[i]);\n                }\n                cov[i][j] = s * factor;\n                cov[j][i] = s * factor;\n            }\n        }\n    } else {\n        throw new Error('Invalid dimension');\n    }\n\n    return cov;\n};\n","'use strict';\n\n/**\n *\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param x - sorted increasing x values\n * @param y\n * @param options\n * @returns {Array} new array with the equally spaced data.\n *\n */\nfunction getEquallySpacedData(x, y, options = {}) {\n    var xLength = x.length;\n    if (x.length > 1 && x[0] > x[1]) {\n        x = x.slice().reverse();\n        y = y.slice().reverse();\n    }\n\n    var {\n        from = x[0],\n        to = x[xLength - 1],\n        variant = 'smooth',\n        numberOfPoints = 100\n    } = options;\n\n    if (xLength !== y.length) {\n        throw new RangeError(\"the x and y vector doesn't have the same size.\");\n    }\n\n    if (typeof from !== 'number' || isNaN(from)) {\n        throw new RangeError(\"'from' option must be a number\");\n    }\n\n    if (typeof to !== 'number' || isNaN(to)) {\n        throw new RangeError(\"'to' option must be a number\");\n    }\n\n    var reverse = from > to;\n    if (reverse) {\n        [from, to] = [to, from];\n    }\n\n    if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n        throw new RangeError(\"'numberOfPoints' option must be a number\");\n    }\n    if (numberOfPoints < 1) {\n        throw new RangeError('the number of points must be at least 1');\n    }\n\n    var output = variant === 'slot' ? getEquallySpacedSlot(x, y, from, to, numberOfPoints) : getEquallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n    return reverse ? output.reverse() : output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nfunction getEquallySpacedSmooth(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n\n    var output = new Array(numberOfPoints);\n\n    var initialOriginalStep = x[1] - x[0];\n    var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n    // Init main variables\n    var min = from - halfStep;\n    var max = from + halfStep;\n\n    var previousX = Number.MIN_VALUE;\n    var previousY = 0;\n    var nextX = x[0] - initialOriginalStep;\n    var nextY = 0;\n\n    var currentValue = 0;\n    var slope = 0;\n    var intercept = 0;\n    var sumAtMin = 0;\n    var sumAtMax = 0;\n\n    var i = 0; // index of input\n    var j = 0; // index of output\n\n    function getSlope(x0, y0, x1, y1) {\n        return (y1 - y0) / (x1 - x0);\n    }\n\n    main: while (true) {\n\n        if (previousX <= min && min <= nextX) {\n            add = integral(0, min - previousX, slope, previousY);\n            sumAtMin = currentValue + add;\n        }\n\n        while (nextX - max >= 0) {\n            // no overlap with original point, just consume current value\n            var add = integral(0, max - previousX, slope, previousY);\n            sumAtMax = currentValue + add;\n\n            output[j++] = (sumAtMax - sumAtMin) / step;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            sumAtMin = sumAtMax;\n        }\n\n        currentValue += integral(previousX, nextX, slope, intercept);\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else if (i === xLength) {\n            nextX += lastOriginalStep;\n            nextY = 0;\n        }\n\n        slope = getSlope(previousX, previousY, nextX, nextY);\n        intercept = -slope * previousX + previousY;\n    }\n\n    return output;\n}\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param x\n * @param y\n * @param from - Initial point\n * @param to - Final point\n * @param numberOfPoints\n * @returns {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nfunction getEquallySpacedSlot(x, y, from, to, numberOfPoints) {\n    var xLength = x.length;\n\n    var step = (to - from) / (numberOfPoints - 1);\n    var halfStep = step / 2;\n    var lastStep = x[x.length - 1] - x[x.length - 2];\n\n    var start = from - halfStep;\n    var output = new Array(numberOfPoints);\n\n    // Init main variables\n    var min = start;\n    var max = start + step;\n\n    var previousX = -Number.MAX_VALUE;\n    var previousY = 0;\n    var nextX = x[0];\n    var nextY = y[0];\n    var frontOutsideSpectra = 0;\n    var backOutsideSpectra = true;\n\n    var currentValue = 0;\n\n    // for slot algorithm\n    var currentPoints = 0;\n\n    var i = 1; // index of input\n    var j = 0; // index of output\n\n    main: while (true) {\n        if (previousX >= nextX) throw (new Error('x must be an increasing serie'));\n        while (previousX - max > 0) {\n            // no overlap with original point, just consume current value\n            if (backOutsideSpectra) {\n                currentPoints++;\n                backOutsideSpectra = false;\n            }\n\n            output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n            j++;\n\n            if (j === numberOfPoints) {\n                break main;\n            }\n\n            min = max;\n            max += step;\n            currentValue = 0;\n            currentPoints = 0;\n        }\n\n        if (previousX > min) {\n            currentValue += previousY;\n            currentPoints++;\n        }\n\n        if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n            currentPoints--;\n        }\n\n        previousX = nextX;\n        previousY = nextY;\n\n        if (i < xLength) {\n            nextX = x[i];\n            nextY = y[i];\n            i++;\n        } else {\n            nextX += lastStep;\n            nextY = 0;\n            frontOutsideSpectra++;\n        }\n    }\n\n    return output;\n}\n/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @returns {number} integral value.\n */\nfunction integral(x0, x1, slope, intercept) {\n    return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\nexports.getEquallySpacedData = getEquallySpacedData;\nexports.integral = integral;\n","'use strict';\n\nexports.SNV = SNV;\nvar Stat = require('ml-stat').array;\n\n/**\n * Function that applies the standard normal variate (SNV) to an array of values.\n *\n * @param data - Array of values.\n * @returns {Array} - applied the SNV.\n */\nfunction SNV(data) {\n    var mean = Stat.mean(data);\n    var std = Stat.standardDeviation(data);\n    var result = data.slice();\n    for (var i = 0; i < data.length; i++) {\n        result[i] = (result[i] - mean) / std;\n    }\n    return result;\n}\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    var floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    var wantXY = !options.withoutXY;\n\n    var start = Date.now();\n\n    var ntuples = {};\n    var ldr, dataLabel, dataValue, ldrs;\n    var position, endLine, infos;\n\n    var result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    var spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    var spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      dataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (dataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          var xIndex = -1;\n          var yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            var firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1'\n            );\n            var secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1'\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            dataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            dataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (dataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (dataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (dataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (dataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (dataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (dataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (dataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (dataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (dataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (dataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (dataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (dataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (dataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (dataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (dataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (dataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (dataLabel === '.OBSERVEFREQUENCY' || dataLabel === '$SFO1') {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (dataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (dataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (dataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (dataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (dataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (dataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (dataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        var pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        var unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (dataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(dataLabel)) {\n        spectrum[convertMSFieldToLabel(dataLabel)] = dataValue;\n      } else if (dataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (dataLabel.match(options.keepRecordsRegExp)) {\n        if (result.info[dataLabel]) {\n          if (!Array.isArray(result.info[dataLabel])) {\n            result.info[dataLabel] = [result.info[dataLabel]];\n          }\n          result.info[dataLabel].push(dataValue.trim());\n        } else {\n          result.info[dataLabel] = dataValue.trim();\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      var newNtuples = [];\n      var keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        var key = keys[i];\n        var values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              var data = spectrum.data[j];\n              var newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2)\n              };\n              for (var k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(dataLabel) {\n    return GC_MS_FIELDS.indexOf(dataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    var spectra = result.spectra;\n    var length = spectra.length;\n    var chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length)\n        }\n      }\n    };\n\n    var existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      var label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length)\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      var spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]]\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    var data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice()\n        }\n      }\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      var shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    var l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    var minZ = spectra[0].data[0][0];\n    var maxZ = minZ;\n    var ySize = spectra.length;\n    var xSize = spectra[0].data[0].length / 2;\n    var z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      var xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        var value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n    return {\n      z: z,\n      minX: spectra[0].data[0][0],\n      maxX: spectra[0].data[0][spectra[0].data[0].length - 2], // has to be -2 because it is a 1D array [x,y,x,y,...]\n      minY: spectra[0].pageValue,\n      maxY: spectra[ySize - 1].pageValue,\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs))\n    };\n  }\n\n  function add2D(result, options) {\n    var zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    var noise = zData.noise;\n    var z = zData.z;\n    var povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    var isOver0, isOver1, isOver2, isOver3;\n    var nbSubSpectra = z.length;\n    var nbPovars = z[0].length;\n    var pAx, pAy, pBx, pBy;\n\n    var x0 = zData.minX;\n    var xN = zData.maxX;\n    var dx = (xN - x0) / (nbPovars - 1);\n    var y0 = zData.minY;\n    var yN = zData.maxY;\n    var dy = (yN - y0) / (nbSubSpectra - 1);\n    var minZ = zData.minZ;\n    var maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    var iter = options.nbContourLevels * 2;\n    var contourLevels = new Array(iter);\n    var lineZValue;\n    for (var level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      var contourLevel = {};\n      contourLevels[level] = contourLevel;\n      var side = level % 2;\n      var factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      var lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (var iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        var subSpectra = z[iSubSpectra];\n        var subSpectraAfter = z[iSubSpectra + 1];\n        for (var povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    var yFactor = spectrum.yFactor;\n    var deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var currentX = spectrum.firstX;\n    var currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    var endLine = false;\n    var ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    var newLine = true;\n    var isDifference = false;\n    var isLastDifference = false;\n    var lastDifference = 0;\n    var isDuplicate = false;\n    var inComment = false;\n    var currentValue = 0; // can be a difference or a duplicate\n    var lastValue = 0; // must be the real last value\n    var isNegative = false;\n    var inValue = false;\n    var skipFirstValue = false;\n    var decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                var duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (var j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            var ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    var removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    var removeCommentRegExp = /\\$\\$.*/;\n    var peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    var values;\n    var currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    var lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nvar convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nvar stamps = {};\nvar worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function (resolve) {\n    var stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options\n      })\n    );\n  });\n}\n\nfunction createWorker() {\n  var workerURL = URL.createObjectURL(\n    new Blob(\n      [`var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`],\n      { type: 'application/javascript' }\n    )\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function (event) {\n    var data = JSON.parse(event.data);\n    var stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (var i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: []\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      var finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      var match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        var dataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (dataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree\n};\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options]\n * @param {string} [options.arrayType = 'xyxy'] - xxyy or xyxy\n * * 'xxyy' `[[x1,x2,x3,...],[y1,y2,y2,...]]`\n * * 'xyxy' `[[x1,y1],[x2,y2],[x3,y3], ...]]`\n * @param {boolean} [options.normalize = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {Array<Array<number>>} - check the 'arrayType' option\n */\nexport function parseXY(text, options = {}) {\n  const {\n    normalize = false,\n    uniqueX = false,\n    arrayType = 'xyxy',\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Math.max(xColumn, yColumn) + 1,\n    minNumberColumns = Math.max(xColumn, yColumn) + 1\n  } = options;\n\n  var lines = text.split(/[\\r\\n]+/);\n\n  if (arrayType !== 'xxyy' && arrayType !== 'xyxy') {\n    throw new Error(`unsupported arrayType (${arrayType})`);\n  }\n\n  var maxY = Number.MIN_VALUE;\n  var result = [[], []];\n  var info = [];\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      var fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n                fields.length >= minNumberColumns &&\n                fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result[0].push(x);\n        result[1].push(y);\n      }\n    } else if (line) {\n      info.push({ position: result[0].length, value: line });\n    }\n  }\n\n  if (normalize) {\n    for (var i = 0; i < result[0].length; i++) {\n      result[1][i] /= maxY;\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result[0], result[1]);\n  }\n\n  if (arrayType === 'xyxy') {\n    var newResult = [];\n    for (let i = 0; i < result[0].length; i++) {\n      newResult.push([result[0][i], result[1][i]]);\n    }\n    result = newResult;\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result\n  };\n}\n","import isArray from 'is-any-array';\n\nfunction _typeof(obj) {\n  if (typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\") {\n    _typeof = function (obj) {\n      return typeof obj;\n    };\n  } else {\n    _typeof = function (obj) {\n      return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n    };\n  }\n\n  return _typeof(obj);\n}\n\n/**\n * Fill an array with sequential numbers\n * @param {Array<number>} [input] - optional destination array (if not provided a new array will be created)\n * @param {object} [options={}]\n * @param {number} [options.from=0] - first value in the array\n * @param {number} [options.to=10] - last value in the array\n * @param {number} [options.size=input.length] - size of the array (if not provided calculated from step)\n * @param {number} [options.step] - if not provided calculated from size\n * @return {Array<number>}\n */\n\nfunction sequentialFill() {\n  var input = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n  if (_typeof(input) === 'object' && !isArray(input)) {\n    options = input;\n    input = [];\n  }\n\n  if (!isArray(input)) {\n    throw new TypeError('input must be an array');\n  }\n\n  var _options = options,\n      _options$from = _options.from,\n      from = _options$from === void 0 ? 0 : _options$from,\n      _options$to = _options.to,\n      to = _options$to === void 0 ? 10 : _options$to,\n      _options$size = _options.size,\n      size = _options$size === void 0 ? input.length : _options$size,\n      step = _options.step;\n\n  if (size && step) {\n    throw new Error('step is defined by the array size');\n  }\n\n  if (!size) {\n    if (step) {\n      size = Math.floor((to - from) / step) + 1;\n    } else {\n      size = to - from + 1;\n    }\n  }\n\n  if (!step && size) {\n    step = (to - from) / (size - 1);\n  }\n\n  if (Array.isArray(input)) {\n    input.length = 0; // only works with normal array\n\n    for (var i = 0; i < size; i++) {\n      input.push(from);\n      from += step;\n    }\n  } else {\n    if (input.length !== size) {\n      throw new Error('sequentialFill typed array must have the correct length');\n    }\n\n    for (var _i = 0; _i < size; _i++) {\n      input[_i] = from;\n      from += step;\n    }\n  }\n\n  return input;\n}\n\nexport default sequentialFill;\n","/**\n * Function that calculates the integral of the line between two\n * x-coordinates, given the slope and intercept of the line.\n * @param x0\n * @param x1\n * @param slope\n * @param intercept\n * @return {number} integral value.\n */\nexport default function integral(x0, x1, slope, intercept) {\n  return (0.5 * slope * x1 * x1 + intercept * x1) - (0.5 * slope * x0 * x0 + intercept * x0);\n}\n\n","import integral from './integral';\n\n/**\n * function that retrieves the getEquallySpacedData with the variant \"smooth\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"smooth\"\n */\nexport default function equallySpacedSmooth(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n\n  var output = new Array(numberOfPoints);\n\n  var initialOriginalStep = x[1] - x[0];\n  var lastOriginalStep = x[xLength - 1] - x[xLength - 2];\n\n  // Init main variables\n  var min = from - halfStep;\n  var max = from + halfStep;\n\n  var previousX = Number.MIN_VALUE;\n  var previousY = 0;\n  var nextX = x[0] - initialOriginalStep;\n  var nextY = 0;\n\n  var currentValue = 0;\n  var slope = 0;\n  var intercept = 0;\n  var sumAtMin = 0;\n  var sumAtMax = 0;\n\n  var i = 0; // index of input\n  var j = 0; // index of output\n\n  function getSlope(x0, y0, x1, y1) {\n    return (y1 - y0) / (x1 - x0);\n  }\n\n  main: while (true) {\n    if (previousX <= min && min <= nextX) {\n      add = integral(0, min - previousX, slope, previousY);\n      sumAtMin = currentValue + add;\n    }\n\n    while (nextX - max >= 0) {\n      // no overlap with original point, just consume current value\n      var add = integral(0, max - previousX, slope, previousY);\n      sumAtMax = currentValue + add;\n\n      output[j++] = (sumAtMax - sumAtMin) / step;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      sumAtMin = sumAtMax;\n    }\n\n    currentValue += integral(previousX, nextX, slope, intercept);\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else if (i === xLength) {\n      nextX += lastOriginalStep;\n      nextY = 0;\n    }\n\n    slope = getSlope(previousX, previousY, nextX, nextY);\n    intercept = -slope * previousX + previousY;\n  }\n\n  return output;\n}\n","/**\n * function that retrieves the getEquallySpacedData with the variant \"slot\"\n *\n * @param {Array<number>} x\n * @param {Array<number>} y\n * @param {number} from - Initial point\n * @param {number} to - Final point\n * @param {number} numberOfPoints\n * @return {Array} - Array of y's equally spaced with the variant \"slot\"\n */\nexport default function equallySpacedSlot(x, y, from, to, numberOfPoints) {\n  var xLength = x.length;\n\n  var step = (to - from) / (numberOfPoints - 1);\n  var halfStep = step / 2;\n  var lastStep = x[x.length - 1] - x[x.length - 2];\n\n  var start = from - halfStep;\n  var output = new Array(numberOfPoints);\n\n  // Init main variables\n  var min = start;\n  var max = start + step;\n\n  var previousX = -Number.MAX_VALUE;\n  var previousY = 0;\n  var nextX = x[0];\n  var nextY = y[0];\n  var frontOutsideSpectra = 0;\n  var backOutsideSpectra = true;\n\n  var currentValue = 0;\n\n  // for slot algorithm\n  var currentPoints = 0;\n\n  var i = 1; // index of input\n  var j = 0; // index of output\n\n  main: while (true) {\n    if (previousX >= nextX) throw new Error('x must be an increasing serie');\n    while (previousX - max > 0) {\n      // no overlap with original point, just consume current value\n      if (backOutsideSpectra) {\n        currentPoints++;\n        backOutsideSpectra = false;\n      }\n\n      output[j] = currentPoints <= 0 ? 0 : currentValue / currentPoints;\n      j++;\n\n      if (j === numberOfPoints) {\n        break main;\n      }\n\n      min = max;\n      max += step;\n      currentValue = 0;\n      currentPoints = 0;\n    }\n\n    if (previousX > min) {\n      currentValue += previousY;\n      currentPoints++;\n    }\n\n    if (previousX === -Number.MAX_VALUE || frontOutsideSpectra > 1) {\n      currentPoints--;\n    }\n\n    previousX = nextX;\n    previousY = nextY;\n\n    if (i < xLength) {\n      nextX = x[i];\n      nextY = y[i];\n      i++;\n    } else {\n      nextX += lastStep;\n      nextY = 0;\n      frontOutsideSpectra++;\n    }\n  }\n\n  return output;\n}\n","import sequentialFill from 'ml-array-sequential-fill';\n\nimport equallySpacedSmooth from './equallySpacedSmooth';\nimport equallySpacedSlot from './equallySpacedSlot';\n\n/**\n * Function that returns a Number array of equally spaced numberOfPoints\n * containing a representation of intensities of the spectra arguments x\n * and y.\n *\n * The options parameter contains an object in the following form:\n * from: starting point\n * to: last point\n * numberOfPoints: number of points between from and to\n * variant: \"slot\" or \"smooth\" - smooth is the default option\n *\n * The slot variant consist that each point in the new array is calculated\n * averaging the existing points between the slot that belongs to the current\n * value. The smooth variant is the same but takes the integral of the range\n * of the slot and divide by the step size between two points in the new array.\n *\n * @param {object} [arrayXY={}] - object containing 2 properties x and y (both an array)\n * @param {object} [options={}]\n * @param {number} [options.from=x[0]]\n * @param {number} [options.to=x[x.length-1]]\n * @param {string} [options.variant='smooth']\n * @param {number} [options.numberOfPoints=100]\n * @return {object<x: Array, y:Array} new object with x / y array with the equally spaced data.\n */\nexport default function equallySpaced(arrayXY = {}, options = {}) {\n  var { x, y } = arrayXY;\n  var xLength = x.length;\n  if (x.length > 1 && x[0] > x[1]) {\n    x = x.slice().reverse();\n    y = y.slice().reverse();\n  }\n\n  var {\n    from = x[0],\n    to = x[xLength - 1],\n    variant = 'smooth',\n    numberOfPoints = 100\n  } = options;\n\n  if (xLength !== y.length) {\n    throw new RangeError(\"the x and y vector doesn't have the same size.\");\n  }\n\n  if (typeof from !== 'number' || isNaN(from)) {\n    throw new RangeError(\"'from' option must be a number\");\n  }\n\n  if (typeof to !== 'number' || isNaN(to)) {\n    throw new RangeError(\"'to' option must be a number\");\n  }\n\n  var originalFrom = from;\n  var originalTo = to;\n\n  var reverse = from > to;\n  if (reverse) {\n    [from, to] = [to, from];\n  }\n\n  if (typeof numberOfPoints !== 'number' || isNaN(numberOfPoints)) {\n    throw new RangeError(\"'numberOfPoints' option must be a number\");\n  }\n  if (numberOfPoints < 1) {\n    throw new RangeError('the number of points must be at least 1');\n  }\n\n  var output =\n    variant === 'slot'\n      ? equallySpacedSlot(x, y, from, to, numberOfPoints)\n      : equallySpacedSmooth(x, y, from, to, numberOfPoints);\n\n  return {\n    x: sequentialFill({\n      from: originalFrom,\n      to: originalTo,\n      size: numberOfPoints\n    }),\n    y: reverse ? output.reverse() : output\n  };\n}\n"],"sourceRoot":""}