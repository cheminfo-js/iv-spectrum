{"version":3,"file":"iv-spectrum.js","sources":["../node_modules/ml-arrayxy-uniquex/src/index.js","../node_modules/xy-parser/src/index.js","../node_modules/ml-xy-convert/src/from.js","../node_modules/ml-xy-convert/src/to.js","../node_modules/ml-xy-convert/src/index.js","../node_modules/convert-to-jcamp/src/creator.js","../node_modules/convert-to-jcamp/src/index.js","../node_modules/jcampconverter/src/index.js","../lib/index.js"],"sourcesContent":["\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param {object} [points={}] : Object of points contains property x (an array) and y (an array)\n * @return points\n */\n\nexport default function uniqueX(points = {}) {\n  const { x, y } = points;\n  if (x.length < 2) return;\n  if (x.length !== y.length) {\n    throw new Error('The X and Y arrays mush have the same length');\n  }\n\n  let current = x[0];\n  let counter = 0;\n\n  for (let i = 1; i < x.length; i++) {\n    if (current !== x[i]) {\n      counter++;\n      current = x[i];\n      x[counter] = x[i];\n      if (i !== counter) {\n        y[counter] = 0;\n      }\n    }\n    if (i !== counter) {\n      y[counter] += y[i];\n    }\n  }\n\n  x.length = counter + 1;\n  y.length = counter + 1;\n}\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options={}]\n * @param {boolean} [options.rescale = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.min(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {object{x:<Array<number>>,y:<Array<number>>}\n */\nexport function parseXY(text, options = {}) {\n  let {\n    rescale = false,\n    uniqueX = false,\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Number.MAX_SAFE_INTEGER,\n    minNumberColumns = 2,\n  } = options;\n\n  maxNumberColumns = Math.max(maxNumberColumns, xColumn + 1, yColumn + 1);\n  minNumberColumns = Math.max(xColumn + 1, yColumn + 1, minNumberColumns);\n\n  let lines = text.split(/[\\r\\n]+/);\n\n  let maxY = Number.MIN_VALUE;\n  let result = { x: [], y: [] };\n  let info = [];\n  for (let l = 0; l < lines.length; l++) {\n    let line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      let fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n        fields.length >= minNumberColumns &&\n        fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result.x.push(x);\n        result.y.push(y);\n      }\n    } else if (line) {\n      info.push({ position: result.x.length, value: line });\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result);\n  }\n\n  if (rescale) {\n    for (let i = 0; i < result.y.length; i++) {\n      result.y[i] /= maxY;\n    }\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result,\n  };\n}\n","export function fromXxyyArray(data) {\n  return { x: data[0], y: data[1] };\n}\n\nexport function fromXyxyArray(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point[0]);\n    y.push(point[1]);\n  }\n  return { x, y };\n}\n\nexport function fromXyxyObject(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point.x);\n    y.push(point.y);\n  }\n  return { x, y };\n}\n\nexport function fromGeneral(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return { x: [], y: [] };\n    if (Array.isArray(data[0])) {\n      if (data.length === 2) {\n        return fromXxyyArray(data);\n      } else {\n        return fromXyxyArray(data);\n      }\n    } else {\n      return fromXyxyObject(data);\n    }\n  } else {\n    if (Array.isArray(data.x) && Array.isArray(data.x)) {\n      return data;\n    } else {\n      throw new TypeError('unknown data format');\n    }\n  }\n}\n","export function toXxyyArray({ x, y }) {\n  return [x, y];\n}\n\nexport function toXyxyArray({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push([x[index], y[index]]);\n  }\n  return ans;\n}\n\nexport function toXyxyObject({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push({ x: x[index], y: y[index] });\n  }\n  return ans;\n}\n","import { fromGeneral, fromXxyyArray, fromXyxyArray, fromXyxyObject } from './from';\nimport { toXxyyArray, toXyxyArray, toXyxyObject } from './to';\n\n/**\n * Convert between different xy formats\n * @param {*} data - input set of points to parse\n * @param {object} [options] - input and output options\n * @param {string} [options.inputFormat] - input format, if not in list infers the kind\n * @param {string} [options.outputFormat = 'xxyyObject'] - output format\n * @return {*} - output set of points\n */\nexport default function xyConvert(data, options = {}) {\n  const { inputFormat, outputFormat = 'xxyyObject' } = options;\n\n  if (inputFormat === outputFormat) return data;\n\n  let middleData;\n  switch (inputFormat) {\n    case 'xxyyArray':\n      middleData = fromXxyyArray(data);\n      break;\n\n    case 'xyxyArray':\n      middleData = fromXyxyArray(data);\n      break;\n\n    case 'xxyyObject':\n      // this is the base case\n      middleData = data;\n      break;\n\n    case 'xyxyObject':\n      middleData = fromXyxyObject(data);\n      break;\n\n    default:\n      middleData = fromGeneral(data);\n      break;\n  }\n\n  switch (outputFormat) {\n    case 'xxyyArray':\n      return toXxyyArray(middleData);\n\n    case 'xyxyArray':\n      return toXyxyArray(middleData);\n\n    case 'xxyyObject':\n      return middleData;\n\n    case 'xyxyObject':\n      return toXyxyObject(middleData);\n\n    default:\n      throw new TypeError(`unknown output format ${outputFormat}`);\n  }\n}\n","/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} data\n * @param {object} [meta] - same metadata object format that the fromText\n * @return {string} JCAMP of the input\n */\nexport default function creator(data, meta = {}) {\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    type = '',\n    xUnit = '',\n    yUnit = '',\n    info = {},\n  } = meta;\n  let firstX = Number.MAX_VALUE;\n  let lastX = Number.MIN_VALUE;\n  let firstY = Number.MAX_VALUE;\n  let lastY = Number.MIN_VALUE;\n  let points = [];\n\n  for (let i = 0; i < data.x.length; i++) {\n    let x = data.x[i];\n    let y = data.y[i];\n    if (firstX > x) {\n      firstX = x;\n    }\n    if (lastX < x) {\n      lastX = x;\n    }\n    if (firstY > y) {\n      firstY = y;\n    }\n    if (lastY < y) {\n      lastY = y;\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  let header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${type}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnit}\n##YUNITS=${yUnit}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(info)) {\n    header += `##$${key}=${info[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import { parseXY } from 'xy-parser';\nimport xyConvert from 'ml-xy-convert';\n\nimport creator from './creator';\n\n/**\n * Convert strings into JCAMP and add extra information\n * @param {string} data - values to add to the file, usually a csv or tsv values\n * @param {object} [options={}]\n * @param {string} [options.meta] - metadata of the file\n * @param {string} [options.meta.title = ''] - title of the file\n * @param {string} [options.meta.owner = ''] - owner of the file\n * @param {string} [options.meta.origin = ''] - origin of the file\n * @param {string} [options.meta.type = ''] - type of data\n * @param {string} [options.meta.xUnit = ''] - units for the x axis\n * @param {string} [options.meta.yUnit = ''] - units for the y axis\n * @param {object} [options.meta.info = {}] - comments to add to the file\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\n * @return {string} JCAMP of the input\n */\nexport function fromText(data, options = {}) {\n  const { meta = {}, parserOptions = {} } = options;\n\n  parserOptions.keepInfo = true;\n  let parsed = parseXY(data, parserOptions);\n\n  if (!meta.info) meta.info = {};\n  meta.info.header = parsed.info.map((i) => i.value).join('\\n');\n  let jcamp = creator(parsed.data, meta);\n  return jcamp;\n}\n\n/**\n * Parse from any supported format in ml-xy-convert\n * @param {*} data - object or array with a set of points\n * @param {object} [meta] - metadata object\n * @return {string} JCAMP of the input\n */\nexport function fromJSON(data, meta = {}) {\n  const parsed = xyConvert(data, { outputFormat: 'xxyyObject' });\n  return creator(parsed, meta);\n}\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    let floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    canonicDataLabels: true,\n    dynamicTyping: false,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false,\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    let wantXY = !options.withoutXY;\n\n    let start = Date.now();\n\n    let ntuples = {};\n    let ldr, dataValue, ldrs;\n    let position, endLine, infos;\n\n    let result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    let spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    let spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      let dataLabel;\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (canonicDataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          let xIndex = -1;\n          let yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            let firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1',\n            );\n            let secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1',\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            canonicDataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            canonicDataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (canonicDataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (canonicDataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (canonicDataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (canonicDataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (canonicDataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (canonicDataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (\n        canonicDataLabel === '.OBSERVEFREQUENCY' ||\n        canonicDataLabel === '$SFO1'\n      ) {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (canonicDataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (canonicDataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (canonicDataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        let pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        let unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (canonicDataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(canonicDataLabel)) {\n        spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n      } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (canonicDataLabel.match(options.keepRecordsRegExp)) {\n        let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        let value = dataValue.trim();\n        if (options.dynamicTyping && !isNaN(value)) {\n          value = Number(value);\n        }\n        if (result.info[label]) {\n          if (!Array.isArray(result.info[label])) {\n            result.info[label] = [result.info[label]];\n          }\n          result.info[label].push(value);\n        } else {\n          result.info[label] = value;\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start,\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start,\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              let data = spectrum.data[j];\n              let newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2),\n              };\n              for (let k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start,\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start,\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(canonicDataLabel) {\n    return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    let spectra = result.spectra;\n    let length = spectra.length;\n    let chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length),\n        },\n      },\n    };\n\n    let existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length),\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      let spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]],\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y,\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    let data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice(),\n        },\n      },\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    let l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    let minZ = spectra[0].data[0][0];\n    let maxZ = minZ;\n    let ySize = spectra.length;\n    let xSize = spectra[0].data[0].length / 2;\n    let z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      let xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        let value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs)),\n    };\n  }\n\n  function add2D(result, options) {\n    let zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    let noise = zData.noise;\n    let z = zData.z;\n    let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    let isOver0, isOver1, isOver2, isOver3;\n    let nbSubSpectra = z.length;\n    let nbPovars = z[0].length;\n    let pAx, pAy, pBx, pBy;\n\n    let x0 = zData.minX;\n    let xN = zData.maxX;\n    let dx = (xN - x0) / (nbPovars - 1);\n    let y0 = zData.minY;\n    let yN = zData.maxY;\n    let dy = (yN - y0) / (nbSubSpectra - 1);\n    let minZ = zData.minZ;\n    let maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    let iter = options.nbContourLevels * 2;\n    let contourLevels = new Array(iter);\n    let lineZValue;\n    for (let level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      let contourLevel = {};\n      contourLevels[level] = contourLevel;\n      let side = level % 2;\n      let factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      let lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        let subSpectra = z[iSubSpectra];\n        let subSpectraAfter = z[iSubSpectra + 1];\n        for (let povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels,\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    let yFactor = spectrum.yFactor;\n    let deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let currentX = spectrum.firstX;\n    let currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    let endLine = false;\n    let ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    let newLine = true;\n    let isDifference = false;\n    let isLastDifference = false;\n    let lastDifference = 0;\n    let isDuplicate = false;\n    let inComment = false;\n    let currentValue = 0; // can be a difference or a duplicate\n    let lastValue = 0; // must be the real last value\n    let isNegative = false;\n    let inValue = false;\n    let skipFirstValue = false;\n    let decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                let duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (let j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            let ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    let removeCommentRegExp = /\\$\\$.*/;\n    let peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nlet convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nlet stamps = {};\nlet worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function(resolve) {\n    let stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options,\n      }),\n    );\n  });\n}\n\nfunction createWorker() {\n  let workerURL = URL.createObjectURL(\n    new Blob(\n      [\n        `var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`,\n      ],\n      { type: 'application/javascript' },\n    ),\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function(event) {\n    let data = JSON.parse(event.data);\n    let stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree,\n};\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar convertToJcamp = require('convert-to-jcamp');\nvar jcampconverter = require('jcampconverter');\n\nfunction toJcamp(spectrum) {\n  let meta = {\n    // title: spectrum.sampleMeta.cellname,\n    owner: '',\n    origin: '',\n    type: 'IV curve',\n    xUnit: 'difference in electric potential [V]',\n    yUnit: 'intensity [A]',\n    info: spectrum.meta,\n  };\n\n  return convertToJcamp.fromJSON({ x: spectrum.x, y: spectrum.y }, meta);\n}\n\n/**\n * Class allowing manipulate one UV spectrum\n * @class spectrum\n * @param {object} [data={}] - object containing a spectrum\n * @param {Array} [data.x=[]] - voltage\n * @param {Array} [data.y=[]] - intensity\n */\nclass Spectrum {\n  constructor(x, y, id, options = {}) {\n    const { meta = {} } = options;\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n\n    this.id = id;\n    this.meta = meta;\n  }\n\n  getXLabel() {\n    return 'Voltage [V]';\n  }\n\n  getYLabel() {\n    return 'Intensity [A]';\n  }\n}\n\nSpectrum.prototype.getData = function() {\n  return { x: this.x, y: this.y };\n};\n\nSpectrum.prototype.toJcamp = function() {\n  return toJcamp(this);\n};\n\nfunction fromSIV(content) {\n  let allLines = content.split(/[\\r\\n]+/);\n  let sampleMeta = parseS(allLines.filter((line) => line.match(/X S_/)));\n  let instrumentMeta = parseV(allLines.filter((line) => line.match(/X V_/)));\n  let date = parseDate(allLines.filter((line) => line.match(/X d_t/))[0]);\n\n  let parts = content.split('WAVES\\t');\n  let spectra = [];\n\n  for (let part of parts) {\n    let lines = part.split(/[\\r\\n]+/);\n    let ys = lines\n      .filter((line) => line.match(/^[\\t 0-9.eE-]+$/))\n      .map((line) => Number(line));\n    if (ys.length < 10) continue;\n\n    let kind = lines[0].trim();\n    let metaLines = lines\n      .filter((line) => line.match(/^X /))\n      .map((line) => line.substring(2));\n\n    let axis = parseScale(metaLines[0], ys.length);\n\n    if (axis.x === undefined || axis.x.unit !== 'V') {\n      // eslint-disable-next-line no-console\n      console.log('Unknown X axis:', axis.kind, axis.unit);\n      continue;\n    }\n    if (axis.y === undefined || axis.y.unit !== 'A') {\n      // eslint-disable-next-line no-console\n      console.log('Unknown Y axis:', axis.kind, axis.unit);\n      continue;\n    }\n    // let note = parseNote(metaLines[1]);\n    let xs = axis.x.values;\n    let data = {\n      x: xs,\n      y: ys,\n    };\n\n    let meta = {\n      ...sampleMeta,\n      date,\n      experiment: kind,\n      ...instrumentMeta,\n    };\n    spectra.push(new Spectrum(data.x, data.y, spectra.length + 1, { meta }));\n  }\n  return spectra;\n}\n\nfunction parseDate(line) {\n  let dateString = line\n    .replace('X d_t=', '')\n    .trim()\n    .replace(/\"/g, '');\n  let date = new Date(dateString);\n  return date;\n}\n\nfunction parseScale(line, nbValues) {\n  let result = {};\n  line = line.replace(/ ([xy]) /g, ',$1,');\n  let parts = line.split('; ');\n\n  for (let part of parts) {\n    let parsedPart = parseScalePart(part, nbValues);\n    result[parsedPart.axis] = parsedPart;\n  }\n  return result;\n}\n\nfunction parseS(lines) {\n  let result = {};\n  for (let line of lines) {\n    let key = line.replace(/X ._([^=]*)=(.*)/, '$1').trim();\n    key = getFieldName(key);\n    let value = line.replace(/X ._([^=]*)=(.*)/, '$2').trim();\n    value = value.replace(/^\"(.*)\"$/, '$1');\n    if (!isNaN(value)) value = Number(value);\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction parseV(lines) {\n  let result = {};\n  for (let line of lines) {\n    let key = line.replace(/X ._([^=]*)=(.*)/, '$1').trim();\n    key = getFieldName(key);\n    let value = line.replace(/X ._([^=]*)=(.*)/, '$2').trim();\n    value = value.replace(/^\"(.*)\"$/, '$1');\n    if (!isNaN(value)) value = Number(value);\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction parseScalePart(scale, nbValues) {\n  let parts = scale.split(',');\n  let result = {};\n  result.axis = parts[1];\n  result.kind = parts[0];\n  result.unit = parts[4].replace(/\"/g, '');\n  if (result.kind === 'SetScale/P') {\n    let from = Number(parts[2]);\n    let step = Number(parts[3]);\n    let values = [];\n    for (let i = 0; i < nbValues; i++) {\n      values.push(from);\n      from += step;\n      result.values = values;\n    }\n  }\n  return result;\n}\n\nfunction getFieldName(key) {\n  const mapping = {\n    CE: 'counterElectrodeType',\n    Calibrationfile: 'calibrationFile',\n    Username: 'username',\n    WE: 'workingElectrodeGlass',\n    cellname: 'cellname',\n    electrolyte: 'electrolyteZ960',\n    layer: 'semicondutorLayer',\n    specification: 'remarks',\n    temp: 'workingTemperature',\n    type: 'typeOfCell',\n    AR: 'cellActiveArea',\n    IT: 'powerIn',\n  };\n  return mapping[key] || key;\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp, id) {\n  const converted = jcampconverter.convert(jcamp, {\n    xy: true,\n    keepRecordsRegExp: /.*/,\n    canonicDataLabels: false,\n    dynamicTyping: true,\n  });\n\n  let data = converted.spectra[0].data[0];\n  let info = converted.info;\n  let meta = {};\n  for (let key of Object.keys(info).filter((key) => key.startsWith('$'))) {\n    meta[key.substr(1)] = info[key];\n  }\n  return new Spectrum(data.x, data.y, id, { meta });\n}\n\nexports.Spectrum = Spectrum;\nexports.fromJcamp = fromJcamp;\nexports.fromSIV = fromSIV;\n"],"names":["uniqueX","points","x","y","length","Error","current","counter","i","parseXY","text","options","rescale","xColumn","yColumn","keepInfo","maxNumberColumns","Number","MAX_SAFE_INTEGER","minNumberColumns","Math","max","lines","split","maxY","MIN_VALUE","result","info","l","line","trim","match","fields","parseFloat","replace","push","position","value","uniqueXFunction","data","fromXxyyArray","fromXyxyArray","point","fromXyxyObject","fromGeneral","Array","isArray","TypeError","toXxyyArray","toXyxyArray","ans","index","toXyxyObject","xyConvert","inputFormat","outputFormat","middleData","creator","meta","title","owner","origin","type","xUnit","yUnit","firstX","MAX_VALUE","lastX","firstY","lastY","header","key","Object","keys","join","fromText","parserOptions","parsed","map","jcamp","fromJSON","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","Spectrum","defaultOptions","keepRecordsRegExp","canonicDataLabels","dynamicTyping","xy","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","convert","assign","wantXY","start","Date","now","ntuples","ldr","dataValue","ldrs","endLine","infos","logs","spectra","spectrum","action","time","dataLabel","indexOf","substring","canonicDataLabel","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","last","vardim","nbPoints","factor","xFactor","yFactor","units","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","dataType","twoD","maxX","minX","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","min","yType","page","pageValue","pageSymbol","pageSymbolIndex","unit","isMSField","convertMSFieldToLabel","sampleDescription","label","isNaN","newNtuples","values","j","add2D","newData","k","complexChromatogram","simpleChromatogram","toLowerCase","times","series","ms","dimension","existingGCMSFields","slice","intensity","shift","getMedian","sort","compareNumbers","floor","a","b","convertTo3DZ","minZ","maxZ","ySize","xSize","z","xVector","reverse","noise","abs","zData","contourLines","generateContourLines","minMax","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","pow","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","input","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","JSON","stringify","workerURL","URL","createObjectURL","Blob","toString","Worker","revokeObjectURL","addEventListener","event","parse","output","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","labelLine","startsWith","children","finished","pop","undefined","forEach","entry","defineProperty","exports","toJcamp","convertToJcamp","constructor","id","getXLabel","getYLabel","prototype","getData","fromSIV","content","allLines","sampleMeta","parseS","filter","instrumentMeta","parseV","date","parseDate","parts","part","ys","kind","metaLines","axis","parseScale","console","log","xs","experiment","dateString","nbValues","parsedPart","parseScalePart","getFieldName","scale","from","step","mapping","CE","Calibrationfile","Username","WE","cellname","electrolyte","layer","specification","temp","AR","IT","fromJcamp","converted","jcampconverter","substr"],"mappings":"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"}