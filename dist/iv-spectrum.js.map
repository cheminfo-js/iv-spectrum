{"version":3,"sources":["webpack://CVSpectrum/webpack/universalModuleDefinition","webpack://CVSpectrum/webpack/bootstrap","webpack://CVSpectrum/./node_modules/convert-to-jcamp/node_modules/ml-arrayxy-uniquex/src/index.js","webpack://CVSpectrum/./lib/index.js","webpack://CVSpectrum/./node_modules/jcampconverter/src/index.js","webpack://CVSpectrum/./node_modules/convert-to-jcamp/node_modules/xy-parser/src/index.js","webpack://CVSpectrum/./node_modules/ml-xy-convert/src/from.js","webpack://CVSpectrum/./node_modules/ml-xy-convert/src/to.js","webpack://CVSpectrum/./node_modules/ml-xy-convert/src/index.js","webpack://CVSpectrum/./node_modules/convert-to-jcamp/src/creator.js","webpack://CVSpectrum/./node_modules/convert-to-jcamp/src/index.js"],"names":["uniqueX","xs","ys","length","current","counter","i","module","exports","Object","defineProperty","value","convertToJcamp","require","jcampconverter","getAnnotations","spectrum","options","fillColor","strokeColor","creationFct","peaks","annotations","map","peak","annotation","line","type","strokeWidth","mode","ABSORBANCE","annotationAbsorbance","TRANSMITTANCE","annotationTransmittance","PERCENT_TRANSMITTANCE","factor","label","text","String","wavelength","size","anchor","color","position","x","y","transmittance","dy","dx","absorbance","toJcamp","meta","owner","origin","xUnit","yUnit","info","fromJson","data","Spectrum","constructor","id","Math","random","getXLabel","getYLabel","prototype","getData","xFactor","yFactor","Spectra","addSpectrum","index","getSpectrumIndex","undefined","removeSpectrum","splice","setMeta","fromSIV","content","allLines","split","sampleMeta","parseS","filter","match","instrumentMeta","parseV","date","parseDate","parts","spectra","console","log","part","lines","Number","kind","trim","metaLines","substring","axis","parseScale","unit","values","experiment","push","dateString","replace","Date","nbValues","result","parsedPart","parseScalePart","key","getFieldName","isNaN","scale","from","step","mapping","CE","Calibrationfile","Username","WE","cellname","electrolyte","layer","specification","temp","AR","IT","fromJcamp","jcamp","converted","convert","xy","keepRecordsRegExp","canonicDataLabels","dynamicTyping","keys","startsWith","substr","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","assign","wantXY","start","now","ntuples","ldr","dataValue","ldrs","endLine","infos","logs","TypeError","action","time","dataLabel","indexOf","canonicDataLabel","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","units","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","maxX","minX","maxY","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","min","max","yType","page","pageValue","pageSymbol","pageSymbolIndex","isMSField","convertMSFieldToLabel","sampleDescription","Array","isArray","newNtuples","j","add2D","newData","k","complexChromatogram","simpleChromatogram","toLowerCase","times","series","ms","dimension","existingGCMSFields","slice","intensity","shift","getMedian","sort","compareNumbers","l","floor","a","b","convertTo3DZ","minZ","maxZ","ySize","xSize","z","xVector","reverse","noise","abs","zData","contourLines","generateContourLines","minMax","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","y0","yN","iter","contourLevels","lineZValue","level","contourLevel","side","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","pow","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","input","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","postMessage","JSON","stringify","workerURL","URL","createObjectURL","Blob","toString","Worker","revokeObjectURL","addEventListener","event","parse","output","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","labelLine","join","children","finished","pop","forEach","entry","parseXY","normalize","arrayType","xColumn","yColumn","keepInfo","maxNumberColumns","minNumberColumns","Error","MIN_VALUE","fields","uniqueXFunction","newResult","fromXxyyArray","fromXyxyArray","point","fromXyxyObject","fromGeneral","toXxyyArray","toXyxyArray","ans","toXyxyObject","xyConvert","inputFormat","outputFormat","middleData","creator","MAX_VALUE","points","header","parserOptions","parsed"],"mappings":"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","file":"iv-spectrum.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CVSpectrum\"] = factory();\n\telse\n\t\troot[\"CVSpectrum\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param xs\n * @param ys\n */\n\nfunction uniqueX(xs, ys) {\n    if (xs.length < 2) return;\n\n    var current = xs[0];\n    var counter = 0;\n\n    for (var i = 1; i < xs.length; i++) {\n        if (current !== xs[i]) {\n            counter++;\n            current = xs[i];\n            xs[counter] = xs[i];\n            if (i !== counter) {\n                ys[counter] = 0;\n            }\n        }\n        if (i !== counter) {\n            ys[counter] += ys[i];\n        }\n\n    }\n\n    xs.length = counter + 1;\n    ys.length = counter + 1;\n}\n\nmodule.exports = uniqueX;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar convertToJcamp = require('convert-to-jcamp');\nvar jcampconverter = require('jcampconverter');\n\nfunction getAnnotations(spectrum, options = {}) {\n  const { fillColor = \"green\", strokeColor = \"red\", creationFct } = options;\n  const peaks = spectrum.peaks;\n  if (!peaks) return [];\n  let annotations = peaks.map(peak => {\n    var annotation = {\n      line: 1,\n      type: \"rect\",\n      strokeColor: strokeColor,\n      strokeWidth: 0,\n      fillColor: fillColor\n    };\n    if (creationFct) {\n      creationFct(annotation, peak);\n    }\n    switch (spectrum.mode) {\n      case ABSORBANCE:\n        annotationAbsorbance(annotation, peak);\n        break;\n      case TRANSMITTANCE:\n        annotationTransmittance(annotation, peak, 1);\n        break;\n      case PERCENT_TRANSMITTANCE:\n        annotationTransmittance(annotation, peak, 100);\n        break;\n    }\n    return annotation;\n  });\n\n  return annotations;\n}\n\nfunction annotationTransmittance(annotation, peak, factor = 1) {\n  annotation.label = [\n    {\n      text: String(peak.wavelength),\n      size: \"12px\",\n      anchor: \"middle\",\n      color: \"red\",\n      position: {\n        x: peak.wavelength,\n        y: peak.transmittance * factor,\n        dy: \"23px\"\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.transmittance * factor,\n      dy: \"10px\",\n      dx: \"-1px\"\n    },\n    {\n      x: peak.wavelength,\n      y: peak.transmittance * factor,\n      dy: \"5px\",\n      dx: \"1px\"\n    }\n  ];\n}\n\nfunction annotationAbsorbance(annotation, peak) {\n  annotation.label = [\n    {\n      text: String(peak.wavelength),\n      size: \"18px\",\n      anchor: \"middle\",\n      color: \"red\",\n      position: {\n        x: peak.wavelength,\n        y: peak.absorbance,\n        dy: \"-15px\"\n      }\n    }\n  ];\n  annotation.position = [\n    {\n      x: peak.wavelength,\n      y: peak.absorbance,\n      dy: \"-10px\",\n      dx: \"-1px\"\n    },\n    {\n      x: peak.wavelength,\n      y: peak.absorbance,\n      dy: \"-5px\",\n      dx: \"1px\"\n    }\n  ];\n}\n\nfunction toJcamp(spectrum) {\n  let meta = {\n    // title: spectrum.sampleMeta.cellname,\n    owner: \"\",\n    origin: \"\",\n    type: \"IV curve\",\n    xUnit: \"difference in electric potential [V]\",\n    yUnit: \"intensity [A]\",\n    info: spectrum.meta\n  };\n\n  return convertToJcamp.fromJson(spectrum.data, meta);\n}\n\n/**\n * Class allowing manipulate one UV spectrum\n * @class spectrum\n * @param {object} [data={}] - object containing a spectrum\n * @param {Array} [data.x=[]] - voltage\n * @param {Array} [data.y=[]] - intensity\n */\nclass Spectrum {\n  constructor(data = { x: [], y: [] }, meta = {}, id = Math.random()) {\n    this.data = data;\n  }\n\n  getXLabel() {\n    return \"Voltage [V]\";\n  }\n\n  getYLabel() {\n    return \"Intensity [A]\";\n  }\n}\n\nSpectrum.prototype.getAnnotations = function(options) {\n  return getAnnotations(this, options);\n};\n\nSpectrum.prototype.getData = function(options = {}) {\n  const { xFactor = 1, yFactor = 1 } = options;\n  return {\n    x: this.data.x.map(x => x * xFactor),\n    y: this.data.y.map(y => y * yFactor)\n  };\n};\n\nSpectrum.prototype.toJcamp = function() {\n  return toJcamp(this);\n};\n\nclass Spectra {\n  constructor() {\n    this.data = [];\n  }\n\n  /**\n   * Add a spectrum\n   * @param {Spectrum} spectrum\n   * @param {string} id\n   * @param {object} [meta={}]\n   */\n  addSpectrum(spectrum, id, meta = {}) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) index = this.data.length;\n    this.data[index] = {\n      spectrum,\n      id,\n      meta\n    };\n  }\n\n  removeSpectrum(id) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    return this.data.splice(index, 1);\n  }\n\n  setMeta(id, meta) {\n    let index = this.getSpectrumIndex(id);\n    if (index === undefined) return undefined;\n    this.data[index].meta = meta;\n  }\n\n  getSpectrumIndex(id) {\n    if (!id) return undefined;\n    for (let i = 0; i < this.data.length; i++) {\n      let spectrum = this.data[i];\n      if (spectrum.id === id) return i;\n    }\n    return undefined;\n  }\n}\n\nfunction fromSIV(content) {\n  let allLines = content.split(/[\\r\\n]+/);\n  let sampleMeta = parseS(allLines.filter(line => line.match(/X S_/)));\n  let instrumentMeta = parseV(allLines.filter(line => line.match(/X V_/)));\n  let date = parseDate(allLines.filter(line => line.match(/X d_t/))[0]);\n\n  let parts = content.split('WAVES\t');\n  let spectra = [];\n\n  console.log(parts);\n  for (let part of parts) {\n    let lines = part.split(/[\\r\\n]+/);\n    console.log(lines.length);\n    let ys = lines\n      .filter(line => line.match(/^[\\t 0-9.eE-]+$/))\n      .map(line => Number(line));\n    if (ys.length < 10) continue;\n\n    let kind = lines[0].trim();\n    let metaLines = lines\n      .filter(line => line.match(/^X /))\n      .map(line => line.substring(2));\n    console.log(metaLines);\n    let axis = parseScale(metaLines[0], ys.length);\n\n    if (!axis.x || axis.x.unit !== 'V') {\n      console.log('Unknown X axis:', axis.kind, axis.unit);\n      continue;\n    }\n    if (!axis.y || axis.y.unit !== 'A') {\n      console.log('Unknown Y axis:', axis.kind, axis.unit);\n      continue;\n    }\n    // let note = parseNote(metaLines[1]);\n    let xs = axis.x.values;\n    let data = {\n      x: xs,\n      y: ys\n    };\n\n    let meta = {\n      ...sampleMeta,\n      date,\n      experiment: kind,\n      ...instrumentMeta\n    };\n    spectra.push(new Spectrum(data, meta));\n  }\n  return spectra;\n}\n\nfunction parseDate(line) {\n  let dateString = line\n    .replace('X d_t=', '')\n    .trim()\n    .replace(/\"/g, '');\n  let date = new Date(dateString);\n  return date;\n}\n\nfunction parseScale(line, nbValues) {\n  let result = {};\n  line = line.replace(/ ([xy]) /g, ',$1,');\n  let parts = line.split('; ');\n  console.log('---------');\n  console.log(parts);\n  for (let part of parts) {\n    let parsedPart = parseScalePart(part, nbValues);\n    console.log(parsedPart);\n    result[parsedPart.axis] = parsedPart;\n  }\n  return result;\n}\n\nfunction parseS(lines) {\n  let result = {};\n  for (let line of lines) {\n    let key = line.replace(/X ._([^=]*)=(.*)/, '$1').trim();\n    key = getFieldName(key);\n    let value = line.replace(/X ._([^=]*)=(.*)/, '$2').trim();\n    value = value.replace(/^\"(.*)\"$/, '$1');\n    if (!isNaN(value)) value = Number(value);\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction parseV(lines) {\n  let result = {};\n  for (let line of lines) {\n    let key = line.replace(/X ._([^=]*)=(.*)/, '$1').trim();\n    key = getFieldName(key);\n    let value = line.replace(/X ._([^=]*)=(.*)/, '$2').trim();\n    value = value.replace(/^\"(.*)\"$/, '$1');\n    if (!isNaN(value)) value = Number(value);\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction parseScalePart(scale, nbValues) {\n  let parts = scale.split(',');\n  let result = {};\n  result.axis = parts[1];\n  result.kind = parts[0];\n  result.unit = parts[4].replace(/\"/g, '');\n  if (result.kind === 'SetScale/P') {\n    let from = Number(parts[2]);\n    let step = Number(parts[3]);\n    let values = [];\n    for (let i = 0; i < nbValues; i++) {\n      values.push(from);\n      from += step;\n      result.values = values;\n    }\n  }\n  return result;\n}\n\nfunction getFieldName(key) {\n  const mapping = {\n    CE: 'counterElectrodeType',\n    Calibrationfile: 'calibrationFile',\n    Username: 'username',\n    WE: 'workingElectrodeGlass',\n    cellname: 'cellname',\n    electrolyte: 'electrolyteZ960',\n    layer: 'semicondutorLayer',\n    specification: 'remarks',\n    temp: 'workingTemperature',\n    type: 'typeOfCell',\n    AR: 'cellActiveArea',\n    IT: 'powerIn'\n  };\n  return mapping[key] || key;\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp) {\n  const converted = jcampconverter.convert(jcamp, {\n    xy: true,\n    keepRecordsRegExp: /.*/,\n    canonicDataLabels: false,\n    dynamicTyping: true\n  });\n\n  let data = converted.spectra[0].data[0];\n  let info = converted.info;\n  let meta = {};\n  for (let key of Object.keys(info).filter(key => key.startsWith(\"$\"))) {\n    meta[key.substr(1)] = info[key];\n  }\n  return new Spectrum(data, meta);\n}\n\nexports.Spectra = Spectra;\nexports.Spectrum = Spectrum;\nexports.fromJcamp = fromJcamp;\nexports.fromSIV = fromSIV;\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    let floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    canonicDataLabels: true,\n    dynamicTyping: false,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false,\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    let wantXY = !options.withoutXY;\n\n    let start = Date.now();\n\n    let ntuples = {};\n    let ldr, dataValue, ldrs;\n    let position, endLine, infos;\n\n    let result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    let spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    let spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      let dataLabel;\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (canonicDataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          let xIndex = -1;\n          let yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            let firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1',\n            );\n            let secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1',\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            canonicDataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            canonicDataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (canonicDataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (canonicDataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (canonicDataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (canonicDataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (canonicDataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (canonicDataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (\n        canonicDataLabel === '.OBSERVEFREQUENCY' ||\n        canonicDataLabel === '$SFO1'\n      ) {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (canonicDataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (canonicDataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (canonicDataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        let pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        let unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (canonicDataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(canonicDataLabel)) {\n        spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n      } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (canonicDataLabel.match(options.keepRecordsRegExp)) {\n        let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        let value = dataValue.trim();\n        if (options.dynamicTyping && !isNaN(value)) {\n          value = Number(value);\n        }\n        if (result.info[label]) {\n          if (!Array.isArray(result.info[label])) {\n            result.info[label] = [result.info[label]];\n          }\n          result.info[label].push(value);\n        } else {\n          result.info[label] = value;\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start,\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start,\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              let data = spectrum.data[j];\n              let newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2),\n              };\n              for (let k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start,\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start,\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(canonicDataLabel) {\n    return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    let spectra = result.spectra;\n    let length = spectra.length;\n    let chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length),\n        },\n      },\n    };\n\n    let existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length),\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      let spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]],\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y,\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    let data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice(),\n        },\n      },\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    let l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    let minZ = spectra[0].data[0][0];\n    let maxZ = minZ;\n    let ySize = spectra.length;\n    let xSize = spectra[0].data[0].length / 2;\n    let z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      let xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        let value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs)),\n    };\n  }\n\n  function add2D(result, options) {\n    let zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    let noise = zData.noise;\n    let z = zData.z;\n    let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    let isOver0, isOver1, isOver2, isOver3;\n    let nbSubSpectra = z.length;\n    let nbPovars = z[0].length;\n    let pAx, pAy, pBx, pBy;\n\n    let x0 = zData.minX;\n    let xN = zData.maxX;\n    let dx = (xN - x0) / (nbPovars - 1);\n    let y0 = zData.minY;\n    let yN = zData.maxY;\n    let dy = (yN - y0) / (nbSubSpectra - 1);\n    let minZ = zData.minZ;\n    let maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    let iter = options.nbContourLevels * 2;\n    let contourLevels = new Array(iter);\n    let lineZValue;\n    for (let level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      let contourLevel = {};\n      contourLevels[level] = contourLevel;\n      let side = level % 2;\n      let factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      let lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        let subSpectra = z[iSubSpectra];\n        let subSpectraAfter = z[iSubSpectra + 1];\n        for (let povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels,\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    let yFactor = spectrum.yFactor;\n    let deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let currentX = spectrum.firstX;\n    let currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    let endLine = false;\n    let ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    let newLine = true;\n    let isDifference = false;\n    let isLastDifference = false;\n    let lastDifference = 0;\n    let isDuplicate = false;\n    let inComment = false;\n    let currentValue = 0; // can be a difference or a duplicate\n    let lastValue = 0; // must be the real last value\n    let isNegative = false;\n    let inValue = false;\n    let skipFirstValue = false;\n    let decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                let duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (let j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            let ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    let removeCommentRegExp = /\\$\\$.*/;\n    let peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nlet convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nlet stamps = {};\nlet worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function(resolve) {\n    let stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options,\n      }),\n    );\n  });\n}\n\nfunction createWorker() {\n  let workerURL = URL.createObjectURL(\n    new Blob(\n      [\n        `var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`,\n      ],\n      { type: 'application/javascript' },\n    ),\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function(event) {\n    let data = JSON.parse(event.data);\n    let stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree,\n};\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options]\n * @param {string} [options.arrayType = 'xyxy'] - xxyy or xyxy\n * * 'xxyy' `[[x1,x2,x3,...],[y1,y2,y2,...]]`\n * * 'xyxy' `[[x1,y1],[x2,y2],[x3,y3], ...]]`\n * @param {boolean} [options.normalize = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {Array<Array<number>>} - check the 'arrayType' option\n */\nexport function parseXY(text, options = {}) {\n  const {\n    normalize = false,\n    uniqueX = false,\n    arrayType = 'xyxy',\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Math.max(xColumn, yColumn) + 1,\n    minNumberColumns = Math.max(xColumn, yColumn) + 1\n  } = options;\n\n  var lines = text.split(/[\\r\\n]+/);\n\n  if (arrayType !== 'xxyy' && arrayType !== 'xyxy') {\n    throw new Error(`unsupported arrayType (${arrayType})`);\n  }\n\n  var maxY = Number.MIN_VALUE;\n  var result = [[], []];\n  var info = [];\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      var fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n                fields.length >= minNumberColumns &&\n                fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result[0].push(x);\n        result[1].push(y);\n      }\n    } else if (line) {\n      info.push({ position: result[0].length, value: line });\n    }\n  }\n\n  if (normalize) {\n    for (var i = 0; i < result[0].length; i++) {\n      result[1][i] /= maxY;\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result[0], result[1]);\n  }\n\n  if (arrayType === 'xyxy') {\n    var newResult = [];\n    for (let i = 0; i < result[0].length; i++) {\n      newResult.push([result[0][i], result[1][i]]);\n    }\n    result = newResult;\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result\n  };\n}\n","export function fromXxyyArray(data) {\n  return { x: data[0], y: data[1] };\n}\n\nexport function fromXyxyArray(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point[0]);\n    y.push(point[1]);\n  }\n  return { x, y };\n}\n\nexport function fromXyxyObject(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point.x);\n    y.push(point.y);\n  }\n  return { x, y };\n}\n\nexport function fromGeneral(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return { x: [], y: [] };\n    if (Array.isArray(data[0])) {\n      if (data.length === 2) {\n        return fromXxyyArray(data);\n      } else {\n        return fromXyxyArray(data);\n      }\n    } else {\n      return fromXyxyObject(data);\n    }\n  } else {\n    if (Array.isArray(data.x) && Array.isArray(data.x)) {\n      return data;\n    } else {\n      throw new TypeError('unknown data format');\n    }\n  }\n}\n","export function toXxyyArray({ x, y }) {\n  return [x, y];\n}\n\nexport function toXyxyArray({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push([x[index], y[index]]);\n  }\n  return ans;\n}\n\nexport function toXyxyObject({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push({ x: x[index], y: y[index] });\n  }\n  return ans;\n}\n","import { fromGeneral, fromXxyyArray, fromXyxyArray, fromXyxyObject } from './from';\nimport { toXxyyArray, toXyxyArray, toXyxyObject } from './to';\n\n/**\n * Convert between different xy formats\n * @param {*} data - input set of points to parse\n * @param {object} [options] - input and output options\n * @param {string} [options.inputFormat] - input format, if not in list infers the kind\n * @param {string} [options.outputFormat = 'xxyyObject'] - output format\n * @return {*} - output set of points\n */\nexport default function xyConvert(data, options = {}) {\n  const { inputFormat, outputFormat = 'xxyyObject' } = options;\n\n  if (inputFormat === outputFormat) return data;\n\n  let middleData;\n  switch (inputFormat) {\n    case 'xxyyArray':\n      middleData = fromXxyyArray(data);\n      break;\n\n    case 'xyxyArray':\n      middleData = fromXyxyArray(data);\n      break;\n\n    case 'xxyyObject':\n      // this is the base case\n      middleData = data;\n      break;\n\n    case 'xyxyObject':\n      middleData = fromXyxyObject(data);\n      break;\n\n    default:\n      middleData = fromGeneral(data);\n      break;\n  }\n\n  switch (outputFormat) {\n    case 'xxyyArray':\n      return toXxyyArray(middleData);\n\n    case 'xyxyArray':\n      return toXyxyArray(middleData);\n\n    case 'xxyyObject':\n      return middleData;\n\n    case 'xyxyObject':\n      return toXyxyObject(middleData);\n\n    default:\n      throw new TypeError(`unknown output format ${outputFormat}`);\n  }\n}\n","/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} data - xyxy array of data\n * @param {object} [meta] - same metadata object format that the convertToJcamp\n * @return {string} JCAMP of the input\n */\nexport default function creator(data, meta = {}) {\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    type = '',\n    xUnit = '',\n    yUnit = '',\n    info = {}\n  } = meta;\n  let firstX = Number.MAX_VALUE;\n  let lastX = Number.MIN_VALUE;\n  let firstY = Number.MAX_VALUE;\n  let lastY = Number.MIN_VALUE;\n  var points = [];\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].length > 1) {\n      var x = Number(data[i][0]);\n      var y = Number(data[i][1]);\n      if (firstX > x) {\n        firstX = x;\n      }\n      if (lastX < x) {\n        lastX = x;\n      }\n      if (firstY > y) {\n        firstY = y;\n      }\n      if (lastY < y) {\n        lastY = y;\n      }\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  var header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${type}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnit}\n##YUNITS=${yUnit}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(info)) {\n    header += `##$${key}=${info[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import { parseXY } from 'xy-parser';\nimport xyConvert from 'ml-xy-convert';\n\nimport creator from './creator';\n\n/**\n * Convert strings into JCAMP and add extra information\n * @param {string} data - values to add to the file, usually a csv or tsv values\n * @param {object} [options]\n * @param {string} [options.meta] - metadata of the file\n * @param {string} [options.meta.title = ''] - title of the file\n * @param {string} [options.meta.owner = ''] - owner of the file\n * @param {string} [options.meta.origin = ''] - origin of the file\n * @param {string} [options.meta.type = ''] - type of data\n * @param {string} [options.meta.xUnit = ''] - units for the x axis\n * @param {string} [options.meta.yUnit = ''] - units for the y axis\n * @param {object} [options.meta.info = {}] - comments to add to the file\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\n * @return {string} JCAMP of the input\n */\nexport default function convertToJcamp(data, options = {}) {\n  const { meta = {}, parserOptions = {} } = options;\n\n  parserOptions.arrayType = 'xyxy';\n  parserOptions.keepInfo = true;\n  var parsed = parseXY(data, parserOptions);\n  if (!meta.info) meta.info = {};\n  meta.info.header = parsed.info.map((i) => i.value).join('\\n');\n  let jcamp = creator(parsed.data, meta);\n  return jcamp;\n}\n\n/**\n * Parse from any supported format in ml-xy-convert\n * @param {*} data - object or array with a set of points\n * @param {object} [meta] - metadata object\n * @return {string} JCAMP of the input\n */\nexport function fromJson(data, meta = {}) {\n  const parsed = xyConvert(data, { outputFormat: 'xyxyArray' });\n  return creator(parsed, meta);\n}\n"],"sourceRoot":""}