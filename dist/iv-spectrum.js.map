{"version":3,"sources":["webpack://CVSpectrum/webpack/universalModuleDefinition","webpack://CVSpectrum/webpack/bootstrap","webpack://CVSpectrum/./node_modules/ml-arrayxy-uniquex/src/index.js","webpack://CVSpectrum/./lib/index.js","webpack://CVSpectrum/./node_modules/jcampconverter/src/index.js","webpack://CVSpectrum/./node_modules/convert-to-jcamp/node_modules/xy-parser/src/index.js","webpack://CVSpectrum/./node_modules/ml-xy-convert/src/from.js","webpack://CVSpectrum/./node_modules/ml-xy-convert/src/to.js","webpack://CVSpectrum/./node_modules/ml-xy-convert/src/index.js","webpack://CVSpectrum/./node_modules/convert-to-jcamp/src/creator.js","webpack://CVSpectrum/./node_modules/convert-to-jcamp/src/index.js"],"names":["uniqueX","xs","ys","length","current","counter","i","module","exports","Object","defineProperty","value","convertToJcamp","require","jcampconverter","toJcamp","spectrum","meta","owner","origin","type","xUnit","yUnit","info","fromJson","x","y","Spectrum","constructor","id","options","reverse","getXLabel","getYLabel","prototype","getData","fromSIV","content","allLines","split","sampleMeta","parseS","filter","line","match","instrumentMeta","parseV","date","parseDate","parts","spectra","part","lines","map","Number","kind","trim","metaLines","substring","axis","parseScale","console","log","unit","dateString","replace","Date","nbValues","result","parsedPart","parseScalePart","key","getFieldName","isNaN","scale","from","step","values","push","mapping","CE","Calibrationfile","Username","WE","cellname","electrolyte","layer","specification","temp","AR","IT","fromJcamp","jcamp","converted","convert","xy","keepRecordsRegExp","canonicDataLabels","dynamicTyping","data","keys","startsWith","substr","getConverter","ntuplesSeparator","GC_MS_FIELDS","convertToFloatArray","stringArray","floatArray","parseFloat","defaultOptions","withoutXY","chromatogram","keepSpectra","noContour","nbContourLevels","noiseMultiplier","profiling","assign","wantXY","start","now","ntuples","ldr","dataValue","ldrs","position","endLine","infos","logs","TypeError","action","time","dataLabel","indexOf","canonicDataLabel","toUpperCase","xIndex","yIndex","firstVariable","secondVariable","symbol","first","firstX","firstY","last","lastX","lastY","vardim","nbPoints","factor","xFactor","yFactor","units","datatable","deltaX","prepareSpectrum","fastParseXYData","parsePeakTable","parseXYA","title","dataType","twoD","maxX","minX","maxY","minY","observeFrequency","xType","indirectFrequency","shiftOffsetNum","shiftOffsetVal","varname","vartype","varform","min","max","yType","page","pageValue","pageSymbol","pageSymbolIndex","isMSField","convertMSFieldToLabel","sampleDescription","label","Array","isArray","newNtuples","j","add2D","newData","k","complexChromatogram","simpleChromatogram","toLowerCase","times","series","ms","dimension","existingGCMSFields","slice","intensity","shift","getMedian","sort","compareNumbers","l","Math","floor","a","b","convertTo3DZ","minZ","maxZ","ySize","xSize","z","xVector","noise","abs","zData","contourLines","generateContourLines","minMax","povarHeight0","povarHeight1","povarHeight2","povarHeight3","isOver0","isOver1","isOver2","isOver3","nbSubSpectra","nbPovars","pAx","pAy","pBx","pBy","x0","xN","dx","y0","yN","dy","iter","contourLevels","lineZValue","level","contourLevel","side","exp","zValue","iSubSpectra","subSpectra","subSpectraAfter","povar","segments","isXYdata","currentData","currentX","currentY","ascii","charCodeAt","newLine","isDifference","isLastDifference","lastDifference","isDuplicate","inComment","currentValue","lastValue","isNegative","inValue","skipFirstValue","decimalPosition","pow","duplicate","ascii2","removeSymbolRegExp","isXYAdata","removeCommentRegExp","peakTableSplitRegExp","isPeaktable","JcampConverter","input","useWorker","postToWorker","stamps","worker","createWorker","Promise","resolve","stamp","random","postMessage","JSON","stringify","workerURL","URL","createObjectURL","Blob","toString","Worker","revokeObjectURL","addEventListener","event","parse","output","createTree","flatten","flat","stack","ntupleLevel","spaces","includes","labelLine","join","children","finished","pop","undefined","forEach","entry","parseXY","text","normalize","arrayType","xColumn","yColumn","keepInfo","maxNumberColumns","minNumberColumns","Error","MIN_VALUE","fields","uniqueXFunction","newResult","fromXxyyArray","fromXyxyArray","point","fromXyxyObject","fromGeneral","toXxyyArray","toXyxyArray","ans","index","toXyxyObject","xyConvert","inputFormat","outputFormat","middleData","creator","MAX_VALUE","points","header","parserOptions","parsed"],"mappings":"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","file":"iv-spectrum.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"CVSpectrum\"] = factory();\n\telse\n\t\troot[\"CVSpectrum\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n","'use strict';\n\n/**\n * In place modification of the 2 arrays to make X unique and sum the Y if X has the same value\n * @param xs\n * @param ys\n */\n\nfunction uniqueX(xs, ys) {\n    if (xs.length < 2) return;\n\n    var current = xs[0];\n    var counter = 0;\n\n    for (var i = 1; i < xs.length; i++) {\n        if (current !== xs[i]) {\n            counter++;\n            current = xs[i];\n            xs[counter] = xs[i];\n            if (i !== counter) {\n                ys[counter] = 0;\n            }\n        }\n        if (i !== counter) {\n            ys[counter] += ys[i];\n        }\n\n    }\n\n    xs.length = counter + 1;\n    ys.length = counter + 1;\n}\n\nmodule.exports = uniqueX;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar convertToJcamp = require('convert-to-jcamp');\nvar jcampconverter = require('jcampconverter');\n\nfunction toJcamp(spectrum) {\n  let meta = {\n    // title: spectrum.sampleMeta.cellname,\n    owner: '',\n    origin: '',\n    type: 'IV curve',\n    xUnit: 'difference in electric potential [V]',\n    yUnit: 'intensity [A]',\n    info: spectrum.meta,\n  };\n\n  return convertToJcamp.fromJson({ x: spectrum.x, y: spectrum.y }, meta);\n}\n\n/**\n * Class allowing manipulate one UV spectrum\n * @class spectrum\n * @param {object} [data={}] - object containing a spectrum\n * @param {Array} [data.x=[]] - voltage\n * @param {Array} [data.y=[]] - intensity\n */\nclass Spectrum {\n  constructor(x, y, id, options = {}) {\n    const { meta = {} } = options;\n\n    if (x && x.length > 1 && x[0] > x[1]) {\n      this.x = x.reverse();\n      this.y = y.reverse();\n    } else {\n      this.x = x || [];\n      this.y = y || [];\n    }\n\n    this.id = id;\n    this.meta = meta;\n  }\n\n  getXLabel() {\n    return 'Voltage [V]';\n  }\n\n  getYLabel() {\n    return 'Intensity [A]';\n  }\n}\n\nSpectrum.prototype.getData = function() {\n  return { x: this.x, y: this.y };\n};\n\nSpectrum.prototype.toJcamp = function() {\n  return toJcamp(this);\n};\n\nfunction fromSIV(content) {\n  let allLines = content.split(/[\\r\\n]+/);\n  let sampleMeta = parseS(allLines.filter((line) => line.match(/X S_/)));\n  let instrumentMeta = parseV(allLines.filter((line) => line.match(/X V_/)));\n  let date = parseDate(allLines.filter((line) => line.match(/X d_t/))[0]);\n\n  let parts = content.split('WAVES\\t');\n  let spectra = [];\n\n  for (let part of parts) {\n    let lines = part.split(/[\\r\\n]+/);\n    let ys = lines\n      .filter((line) => line.match(/^[\\t 0-9.eE-]+$/))\n      .map((line) => Number(line));\n    if (ys.length < 10) continue;\n\n    let kind = lines[0].trim();\n    let metaLines = lines\n      .filter((line) => line.match(/^X /))\n      .map((line) => line.substring(2));\n\n    let axis = parseScale(metaLines[0], ys.length);\n\n    {\n      // eslint-disable-next-line no-console\n      console.log('Unknown X axis:', axis.kind, axis.unit);\n      continue;\n    }\n  }\n  return spectra;\n}\n\nfunction parseDate(line) {\n  let dateString = line\n    .replace('X d_t=', '')\n    .trim()\n    .replace(/\"/g, '');\n  let date = new Date(dateString);\n  return date;\n}\n\nfunction parseScale(line, nbValues) {\n  let result = {};\n  line = line.replace(/ ([xy]) /g, ',$1,');\n  let parts = line.split('; ');\n\n  for (let part of parts) {\n    let parsedPart = parseScalePart(part, nbValues);\n    result[parsedPart.axis] = parsedPart;\n  }\n  return result;\n}\n\nfunction parseS(lines) {\n  let result = {};\n  for (let line of lines) {\n    let key = line.replace(/X ._([^=]*)=(.*)/, '$1').trim();\n    key = getFieldName(key);\n    let value = line.replace(/X ._([^=]*)=(.*)/, '$2').trim();\n    value = value.replace(/^\"(.*)\"$/, '$1');\n    if (!isNaN(value)) value = Number(value);\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction parseV(lines) {\n  let result = {};\n  for (let line of lines) {\n    let key = line.replace(/X ._([^=]*)=(.*)/, '$1').trim();\n    key = getFieldName(key);\n    let value = line.replace(/X ._([^=]*)=(.*)/, '$2').trim();\n    value = value.replace(/^\"(.*)\"$/, '$1');\n    if (!isNaN(value)) value = Number(value);\n    result[key] = value;\n  }\n  return result;\n}\n\nfunction parseScalePart(scale, nbValues) {\n  let parts = scale.split(',');\n  let result = {};\n  result.axis = parts[1];\n  result.kind = parts[0];\n  result.unit = parts[4].replace(/\"/g, '');\n  if (result.kind === 'SetScale/P') {\n    let from = Number(parts[2]);\n    let step = Number(parts[3]);\n    let values = [];\n    for (let i = 0; i < nbValues; i++) {\n      values.push(from);\n      from += step;\n      result.values = values;\n    }\n  }\n  return result;\n}\n\nfunction getFieldName(key) {\n  const mapping = {\n    CE: 'counterElectrodeType',\n    Calibrationfile: 'calibrationFile',\n    Username: 'username',\n    WE: 'workingElectrodeGlass',\n    cellname: 'cellname',\n    electrolyte: 'electrolyteZ960',\n    layer: 'semicondutorLayer',\n    specification: 'remarks',\n    temp: 'workingTemperature',\n    type: 'typeOfCell',\n    AR: 'cellActiveArea',\n    IT: 'powerIn',\n  };\n  return mapping[key] || key;\n}\n\n/**\n * Creates a new Chromatogram element based in a JCAMP string\n * @param {string} jcamp - String containing the JCAMP data\n * @return {Spectrum} - New class element with the given data\n */\nfunction fromJcamp(jcamp, id) {\n  const converted = jcampconverter.convert(jcamp, {\n    xy: true,\n    keepRecordsRegExp: /.*/,\n    canonicDataLabels: false,\n    dynamicTyping: true,\n  });\n\n  let data = converted.spectra[0].data[0];\n  let info = converted.info;\n  let meta = {};\n  for (let key of Object.keys(info).filter((key) => key.startsWith('$'))) {\n    meta[key.substr(1)] = info[key];\n  }\n  return new Spectrum(data.x, data.y, id, { meta });\n}\n\nexports.Spectrum = Spectrum;\nexports.fromJcamp = fromJcamp;\nexports.fromSIV = fromSIV;\n","'use strict';\n\nfunction getConverter() {\n  // the following RegExp can only be used for XYdata, some peakTables have values with a \"E-5\" ...\n  const ntuplesSeparator = /[, \\t]+/;\n  const GC_MS_FIELDS = ['TIC', '.RIC', 'SCANNUMBER'];\n\n  function convertToFloatArray(stringArray) {\n    let floatArray = [];\n    for (let i = 0; i < stringArray.length; i++) {\n      floatArray.push(parseFloat(stringArray[i]));\n    }\n    return floatArray;\n  }\n\n  class Spectrum {}\n\n  const defaultOptions = {\n    keepRecordsRegExp: /^$/,\n    canonicDataLabels: true,\n    dynamicTyping: false,\n    xy: false,\n    withoutXY: false,\n    chromatogram: false,\n    keepSpectra: false,\n    noContour: false,\n    nbContourLevels: 7,\n    noiseMultiplier: 5,\n    profiling: false,\n  };\n\n  function convert(jcamp, options) {\n    options = Object.assign({}, defaultOptions, options);\n\n    let wantXY = !options.withoutXY;\n\n    let start = Date.now();\n\n    let ntuples = {};\n    let ldr, dataValue, ldrs;\n    let position, endLine, infos;\n\n    let result = {};\n    result.profiling = options.profiling ? [] : false;\n    result.logs = [];\n    let spectra = [];\n    result.spectra = spectra;\n    result.info = {};\n    let spectrum = new Spectrum();\n\n    if (!(typeof jcamp === 'string')) {\n      throw new TypeError('the JCAMP should be a string');\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Before split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    ldrs = jcamp.split(/[\\r\\n]+##/);\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Split to LDRS',\n        time: Date.now() - start,\n      });\n    }\n\n    if (ldrs[0]) ldrs[0] = ldrs[0].replace(/^[\\r\\n ]*##/, '');\n\n    for (let i = 0; i < ldrs.length; i++) {\n      let dataLabel;\n      ldr = ldrs[i];\n      // This is a new LDR\n      position = ldr.indexOf('=');\n      if (position > 0) {\n        dataLabel = ldr.substring(0, position);\n        dataValue = ldr.substring(position + 1).trim();\n      } else {\n        dataLabel = ldr;\n        dataValue = '';\n      }\n      let canonicDataLabel = dataLabel.replace(/[_ -]/g, '').toUpperCase();\n\n      if (canonicDataLabel === 'DATATABLE') {\n        endLine = dataValue.indexOf('\\n');\n        if (endLine === -1) endLine = dataValue.indexOf('\\r');\n        if (endLine > 0) {\n          let xIndex = -1;\n          let yIndex = -1;\n          // ##DATA TABLE= (X++(I..I)), XYDATA\n          // We need to find the variables\n\n          infos = dataValue.substring(0, endLine).split(/[ ,;\\t]+/);\n          if (infos[0].indexOf('++') > 0) {\n            let firstVariable = infos[0].replace(\n              /.*\\(([a-zA-Z0-9]+)\\+\\+.*/,\n              '$1',\n            );\n            let secondVariable = infos[0].replace(\n              /.*\\.\\.([a-zA-Z0-9]+).*/,\n              '$1',\n            );\n            xIndex = ntuples.symbol.indexOf(firstVariable);\n            yIndex = ntuples.symbol.indexOf(secondVariable);\n          }\n\n          if (xIndex === -1) xIndex = 0;\n          if (yIndex === -1) yIndex = 0;\n\n          if (ntuples.first) {\n            if (ntuples.first.length > xIndex) {\n              spectrum.firstX = ntuples.first[xIndex];\n            }\n            if (ntuples.first.length > yIndex) {\n              spectrum.firstY = ntuples.first[yIndex];\n            }\n          }\n          if (ntuples.last) {\n            if (ntuples.last.length > xIndex) {\n              spectrum.lastX = ntuples.last[xIndex];\n            }\n            if (ntuples.last.length > yIndex) {\n              spectrum.lastY = ntuples.last[yIndex];\n            }\n          }\n          if (ntuples.vardim && ntuples.vardim.length > xIndex) {\n            spectrum.nbPoints = ntuples.vardim[xIndex];\n          }\n          if (ntuples.factor) {\n            if (ntuples.factor.length > xIndex) {\n              spectrum.xFactor = ntuples.factor[xIndex];\n            }\n            if (ntuples.factor.length > yIndex) {\n              spectrum.yFactor = ntuples.factor[yIndex];\n            }\n          }\n          if (ntuples.units) {\n            if (ntuples.units.length > xIndex) {\n              spectrum.xUnit = ntuples.units[xIndex];\n            }\n            if (ntuples.units.length > yIndex) {\n              spectrum.yUnit = ntuples.units[yIndex];\n            }\n          }\n          spectrum.datatable = infos[0];\n          if (infos[1] && infos[1].indexOf('PEAKS') > -1) {\n            canonicDataLabel = 'PEAKTABLE';\n          } else if (\n            infos[1] &&\n            (infos[1].indexOf('XYDATA') || infos[0].indexOf('++') > 0)\n          ) {\n            canonicDataLabel = 'XYDATA';\n            spectrum.deltaX =\n              (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n          }\n        }\n      }\n\n      if (canonicDataLabel === 'XYDATA') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          // well apparently we should still consider it is a PEAK TABLE if there are no '++' after\n          if (dataValue.match(/.*\\+\\+.*/)) {\n            // ex: (X++(Y..Y))\n            if (!spectrum.deltaX) {\n              spectrum.deltaX =\n                (spectrum.lastX - spectrum.firstX) / (spectrum.nbPoints - 1);\n            }\n            fastParseXYData(spectrum, dataValue, result);\n          } else {\n            parsePeakTable(spectrum, dataValue, result);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      } else if (canonicDataLabel === 'PEAKTABLE') {\n        if (wantXY) {\n          prepareSpectrum(result, spectrum);\n          parsePeakTable(spectrum, dataValue, result);\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n      if (canonicDataLabel === 'PEAKASSIGNMENTS') {\n        if (wantXY) {\n          if (dataValue.match(/.*(XYA).*/)) {\n            // ex: (XYA)\n            parseXYA(spectrum, dataValue);\n          }\n          spectra.push(spectrum);\n          spectrum = new Spectrum();\n        }\n        continue;\n      }\n\n      if (canonicDataLabel === 'TITLE') {\n        spectrum.title = dataValue;\n      } else if (canonicDataLabel === 'DATATYPE') {\n        spectrum.dataType = dataValue;\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'NTUPLES') {\n        if (dataValue.indexOf('nD') > -1) {\n          result.twoD = true;\n        }\n      } else if (canonicDataLabel === 'XUNITS') {\n        spectrum.xUnit = dataValue;\n      } else if (canonicDataLabel === 'YUNITS') {\n        spectrum.yUnit = dataValue;\n      } else if (canonicDataLabel === 'FIRSTX') {\n        spectrum.firstX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTX') {\n        spectrum.lastX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'FIRSTY') {\n        spectrum.firstY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'LASTY') {\n        spectrum.lastY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'NPOINTS') {\n        spectrum.nbPoints = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'XFACTOR') {\n        spectrum.xFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'YFACTOR') {\n        spectrum.yFactor = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXX') {\n        spectrum.maxX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINX') {\n        spectrum.minX = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MAXY') {\n        spectrum.maxY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'MINY') {\n        spectrum.minY = parseFloat(dataValue);\n      } else if (canonicDataLabel === 'DELTAX') {\n        spectrum.deltaX = parseFloat(dataValue);\n      } else if (\n        canonicDataLabel === '.OBSERVEFREQUENCY' ||\n        canonicDataLabel === '$SFO1'\n      ) {\n        if (!spectrum.observeFrequency) {\n          spectrum.observeFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '.OBSERVENUCLEUS') {\n        if (!spectrum.xType) {\n          result.xType = dataValue.replace(/[^a-zA-Z0-9]/g, '');\n        }\n      } else if (canonicDataLabel === '$SFO2') {\n        if (!result.indirectFrequency) {\n          result.indirectFrequency = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$OFFSET') {\n        // OFFSET for Bruker spectra\n        result.shiftOffsetNum = 0;\n        if (!spectrum.shiftOffsetVal) {\n          spectrum.shiftOffsetVal = parseFloat(dataValue);\n        }\n      } else if (canonicDataLabel === '$REFERENCEPOINT') {\n        // OFFSET for Varian spectra\n        // if we activate this part it does not work for ACD specmanager\n        //         } else if (canonicDataLabel=='.SHIFTREFERENCE') {   // OFFSET FOR Bruker Spectra\n        //                 var parts = dataValue.split(/ *, */);\n        //                 result.shiftOffsetNum = parseInt(parts[2].trim());\n        //                 spectrum.shiftOffsetVal = parseFloat(parts[3].trim());\n      } else if (canonicDataLabel === 'VARNAME') {\n        ntuples.varname = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'SYMBOL') {\n        ntuples.symbol = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARTYPE') {\n        ntuples.vartype = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARFORM') {\n        ntuples.varform = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'VARDIM') {\n        ntuples.vardim = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'UNITS') {\n        ntuples.units = dataValue.split(ntuplesSeparator);\n      } else if (canonicDataLabel === 'FACTOR') {\n        ntuples.factor = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'FIRST') {\n        ntuples.first = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'LAST') {\n        ntuples.last = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MIN') {\n        ntuples.min = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === 'MAX') {\n        ntuples.max = convertToFloatArray(dataValue.split(ntuplesSeparator));\n      } else if (canonicDataLabel === '.NUCLEUS') {\n        if (result.twoD) {\n          result.yType = dataValue.split(ntuplesSeparator)[0];\n        }\n      } else if (canonicDataLabel === 'PAGE') {\n        spectrum.page = dataValue.trim();\n        spectrum.pageValue = parseFloat(dataValue.replace(/^.*=/, ''));\n        spectrum.pageSymbol = spectrum.page.replace(/[=].*/, '');\n        let pageSymbolIndex = ntuples.symbol.indexOf(spectrum.pageSymbol);\n        let unit = '';\n        if (ntuples.units && ntuples.units[pageSymbolIndex]) {\n          unit = ntuples.units[pageSymbolIndex];\n        }\n        if (result.indirectFrequency && unit !== 'PPM') {\n          spectrum.pageValue /= result.indirectFrequency;\n        }\n      } else if (canonicDataLabel === 'RETENTIONTIME') {\n        spectrum.pageValue = parseFloat(dataValue);\n      } else if (isMSField(canonicDataLabel)) {\n        spectrum[convertMSFieldToLabel(canonicDataLabel)] = dataValue;\n      } else if (canonicDataLabel === 'SAMPLEDESCRIPTION') {\n        spectrum.sampleDescription = dataValue;\n      }\n      if (canonicDataLabel.match(options.keepRecordsRegExp)) {\n        let label = options.canonicDataLabels ? canonicDataLabel : dataLabel;\n        let value = dataValue.trim();\n        if (options.dynamicTyping && !isNaN(value)) {\n          value = Number(value);\n        }\n        if (result.info[label]) {\n          if (!Array.isArray(result.info[label])) {\n            result.info[label] = [result.info[label]];\n          }\n          result.info[label].push(value);\n        } else {\n          result.info[label] = value;\n        }\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Finished parsing',\n        time: Date.now() - start,\n      });\n    }\n\n    if (Object.keys(ntuples).length > 0) {\n      let newNtuples = [];\n      let keys = Object.keys(ntuples);\n      for (let i = 0; i < keys.length; i++) {\n        let key = keys[i];\n        let values = ntuples[key];\n        for (let j = 0; j < values.length; j++) {\n          if (!newNtuples[j]) newNtuples[j] = {};\n          newNtuples[j][key] = values[j];\n        }\n      }\n      result.ntuples = newNtuples;\n    }\n\n    if (result.twoD && wantXY) {\n      add2D(result, options);\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished countour plot calculation',\n          time: Date.now() - start,\n        });\n      }\n      if (!options.keepSpectra) {\n        delete result.spectra;\n      }\n    }\n\n    if (options.chromatogram) {\n      options.xy = true;\n    }\n\n    if (options.xy && wantXY) {\n      // the spectraData should not be a oneD array but an object with x and y\n      if (spectra.length > 0) {\n        for (let i = 0; i < spectra.length; i++) {\n          spectrum = spectra[i];\n          if (spectrum.data.length > 0) {\n            for (let j = 0; j < spectrum.data.length; j++) {\n              let data = spectrum.data[j];\n              let newData = {\n                x: new Array(data.length / 2),\n                y: new Array(data.length / 2),\n              };\n              for (let k = 0; k < data.length; k = k + 2) {\n                newData.x[k / 2] = data[k];\n                newData.y[k / 2] = data[k + 1];\n              }\n              spectrum.data[j] = newData;\n            }\n          }\n        }\n      }\n    }\n\n    // maybe it is a GC (HPLC) / MS. In this case we add a new format\n    if (options.chromatogram) {\n      if (result.spectra.length > 1) {\n        complexChromatogram(result);\n      } else {\n        simpleChromatogram(result);\n      }\n      if (result.profiling) {\n        result.profiling.push({\n          action: 'Finished chromatogram calculation',\n          time: Date.now() - start,\n        });\n      }\n    }\n\n    if (result.profiling) {\n      result.profiling.push({\n        action: 'Total time',\n        time: Date.now() - start,\n      });\n    }\n\n    return result;\n  }\n\n  function convertMSFieldToLabel(value) {\n    return value.toLowerCase().replace(/[^a-z0-9]/g, '');\n  }\n\n  function isMSField(canonicDataLabel) {\n    return GC_MS_FIELDS.indexOf(canonicDataLabel) !== -1;\n  }\n\n  function complexChromatogram(result) {\n    let spectra = result.spectra;\n    let length = spectra.length;\n    let chromatogram = {\n      times: new Array(length),\n      series: {\n        ms: {\n          dimension: 2,\n          data: new Array(length),\n        },\n      },\n    };\n\n    let existingGCMSFields = [];\n    for (let i = 0; i < GC_MS_FIELDS.length; i++) {\n      let label = convertMSFieldToLabel(GC_MS_FIELDS[i]);\n      if (spectra[0][label]) {\n        existingGCMSFields.push(label);\n        chromatogram.series[label] = {\n          dimension: 1,\n          data: new Array(length),\n        };\n      }\n    }\n\n    for (let i = 0; i < length; i++) {\n      let spectrum = spectra[i];\n      chromatogram.times[i] = spectrum.pageValue;\n      for (let j = 0; j < existingGCMSFields.length; j++) {\n        chromatogram.series[existingGCMSFields[j]].data[i] = parseFloat(\n          spectrum[existingGCMSFields[j]],\n        );\n      }\n      if (spectrum.data) {\n        chromatogram.series.ms.data[i] = [\n          spectrum.data[0].x,\n          spectrum.data[0].y,\n        ];\n      }\n    }\n    result.chromatogram = chromatogram;\n  }\n\n  function simpleChromatogram(result) {\n    let data = result.spectra[0].data[0];\n    result.chromatogram = {\n      times: data.x.slice(),\n      series: {\n        intensity: {\n          dimension: 1,\n          data: data.y.slice(),\n        },\n      },\n    };\n  }\n\n  function prepareSpectrum(result, spectrum) {\n    if (!spectrum.xFactor) spectrum.xFactor = 1;\n    if (!spectrum.yFactor) spectrum.yFactor = 1;\n    if (spectrum.observeFrequency) {\n      if (spectrum.xUnit && spectrum.xUnit.toUpperCase() === 'HZ') {\n        spectrum.xUnit = 'PPM';\n        spectrum.xFactor = spectrum.xFactor / spectrum.observeFrequency;\n        spectrum.firstX = spectrum.firstX / spectrum.observeFrequency;\n        spectrum.lastX = spectrum.lastX / spectrum.observeFrequency;\n        spectrum.deltaX = spectrum.deltaX / spectrum.observeFrequency;\n      }\n    }\n    if (spectrum.shiftOffsetVal) {\n      let shift = spectrum.firstX - spectrum.shiftOffsetVal;\n      spectrum.firstX = spectrum.firstX - shift;\n      spectrum.lastX = spectrum.lastX - shift;\n    }\n  }\n\n  function getMedian(data) {\n    data = data.sort(compareNumbers);\n    let l = data.length;\n    return data[Math.floor(l / 2)];\n  }\n\n  function compareNumbers(a, b) {\n    return a - b;\n  }\n\n  function convertTo3DZ(spectra) {\n    let minZ = spectra[0].data[0][0];\n    let maxZ = minZ;\n    let ySize = spectra.length;\n    let xSize = spectra[0].data[0].length / 2;\n    let z = new Array(ySize);\n    for (let i = 0; i < ySize; i++) {\n      z[i] = new Array(xSize);\n      let xVector = spectra[i].data[0];\n      for (let j = 0; j < xSize; j++) {\n        let value = xVector[j * 2 + 1];\n        z[i][j] = value;\n        if (value < minZ) minZ = value;\n        if (value > maxZ) maxZ = value;\n      }\n    }\n\n    const firstX = spectra[0].data[0][0];\n    const lastX = spectra[0].data[0][spectra[0].data[0].length - 2]; // has to be -2 because it is a 1D array [x,y,x,y,...]\n    const firstY = spectra[0].pageValue;\n    const lastY = spectra[ySize - 1].pageValue;\n\n    // Because the min / max value are the only information about the matrix if we invert\n    // min and max we need to invert the array\n    if (firstX > lastX) {\n      for (let spectrum of z) {\n        spectrum.reverse();\n      }\n    }\n    if (firstY > lastY) {\n      z.reverse();\n    }\n\n    return {\n      z: z,\n      minX: Math.min(firstX, lastX),\n      maxX: Math.max(firstX, lastX),\n      minY: Math.min(firstY, lastY),\n      maxY: Math.max(firstY, lastY),\n      minZ: minZ,\n      maxZ: maxZ,\n      noise: getMedian(z[0].map(Math.abs)),\n    };\n  }\n\n  function add2D(result, options) {\n    let zData = convertTo3DZ(result.spectra);\n    if (!options.noContour) {\n      result.contourLines = generateContourLines(zData, options);\n      delete zData.z;\n    }\n    result.minMax = zData;\n  }\n\n  function generateContourLines(zData, options) {\n    let noise = zData.noise;\n    let z = zData.z;\n    let povarHeight0, povarHeight1, povarHeight2, povarHeight3;\n    let isOver0, isOver1, isOver2, isOver3;\n    let nbSubSpectra = z.length;\n    let nbPovars = z[0].length;\n    let pAx, pAy, pBx, pBy;\n\n    let x0 = zData.minX;\n    let xN = zData.maxX;\n    let dx = (xN - x0) / (nbPovars - 1);\n    let y0 = zData.minY;\n    let yN = zData.maxY;\n    let dy = (yN - y0) / (nbSubSpectra - 1);\n    let minZ = zData.minZ;\n    let maxZ = zData.maxZ;\n\n    // System.out.prvarln('y0 '+y0+' yN '+yN);\n    // -------------------------\n    // Povars attribution\n    //\n    // 0----1\n    // |  / |\n    // | /  |\n    // 2----3\n    //\n    // ---------------------d------\n\n    let iter = options.nbContourLevels * 2;\n    let contourLevels = new Array(iter);\n    let lineZValue;\n    for (let level = 0; level < iter; level++) {\n      // multiply by 2 for positif and negatif\n      let contourLevel = {};\n      contourLevels[level] = contourLevel;\n      let side = level % 2;\n      let factor =\n        (maxZ - options.noiseMultiplier * noise) *\n        Math.exp((level >> 1) - options.nbContourLevels);\n      if (side === 0) {\n        lineZValue = factor + options.noiseMultiplier * noise;\n      } else {\n        lineZValue = 0 - factor - options.noiseMultiplier * noise;\n      }\n      let lines = [];\n      contourLevel.zValue = lineZValue;\n      contourLevel.lines = lines;\n\n      if (lineZValue <= minZ || lineZValue >= maxZ) continue;\n\n      for (let iSubSpectra = 0; iSubSpectra < nbSubSpectra - 1; iSubSpectra++) {\n        let subSpectra = z[iSubSpectra];\n        let subSpectraAfter = z[iSubSpectra + 1];\n        for (let povar = 0; povar < nbPovars - 1; povar++) {\n          povarHeight0 = subSpectra[povar];\n          povarHeight1 = subSpectra[povar + 1];\n          povarHeight2 = subSpectraAfter[povar];\n          povarHeight3 = subSpectraAfter[povar + 1];\n\n          isOver0 = povarHeight0 > lineZValue;\n          isOver1 = povarHeight1 > lineZValue;\n          isOver2 = povarHeight2 > lineZValue;\n          isOver3 = povarHeight3 > lineZValue;\n\n          // Example povar0 is over the plane and povar1 and\n          // povar2 are below, we find the varersections and add\n          // the segment\n          if (isOver0 !== isOver1 && isOver0 !== isOver2) {\n            pAx =\n              povar +\n              (lineZValue - povarHeight0) / (povarHeight1 - povarHeight0);\n            pAy = iSubSpectra;\n            pBx = povar;\n            pBy =\n              iSubSpectra +\n              (lineZValue - povarHeight0) / (povarHeight2 - povarHeight0);\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // remove push does not help !!!!\n          if (isOver3 !== isOver1 && isOver3 !== isOver2) {\n            pAx = povar + 1;\n            pAy =\n              iSubSpectra +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight1 - povarHeight3);\n            pBx =\n              povar +\n              1 -\n              (lineZValue - povarHeight3) / (povarHeight2 - povarHeight3);\n            pBy = iSubSpectra + 1;\n            lines.push(pAx * dx + x0);\n            lines.push(pAy * dy + y0);\n            lines.push(pBx * dx + x0);\n            lines.push(pBy * dy + y0);\n          }\n          // test around the diagonal\n          if (isOver1 !== isOver2) {\n            pAx =\n              (povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dx +\n              x0;\n            pAy =\n              (iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight2 - povarHeight1)) *\n                dy +\n              y0;\n            if (isOver1 !== isOver0) {\n              pBx =\n                povar +\n                1 -\n                (lineZValue - povarHeight1) / (povarHeight0 - povarHeight1);\n              pBy = iSubSpectra;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver0) {\n              pBx = povar;\n              pBy =\n                iSubSpectra +\n                1 -\n                (lineZValue - povarHeight2) / (povarHeight0 - povarHeight2);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver1 !== isOver3) {\n              pBx = povar + 1;\n              pBy =\n                iSubSpectra +\n                (lineZValue - povarHeight1) / (povarHeight3 - povarHeight1);\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n            if (isOver2 !== isOver3) {\n              pBx =\n                povar +\n                (lineZValue - povarHeight2) / (povarHeight3 - povarHeight2);\n              pBy = iSubSpectra + 1;\n              lines.push(pAx);\n              lines.push(pAy);\n              lines.push(pBx * dx + x0);\n              lines.push(pBy * dy + y0);\n            }\n          }\n        }\n      }\n    }\n\n    return {\n      minX: zData.minX,\n      maxX: zData.maxX,\n      minY: zData.minY,\n      maxY: zData.maxY,\n      segments: contourLevels,\n    };\n  }\n\n  function fastParseXYData(spectrum, value) {\n    // TODO need to deal with result\n    //  console.log(value);\n    // we check if deltaX is defined otherwise we calculate it\n\n    let yFactor = spectrum.yFactor;\n    let deltaX = spectrum.deltaX;\n\n    spectrum.isXYdata = true;\n    // TODO to be improved using 2 array {x:[], y:[]}\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let currentX = spectrum.firstX;\n    let currentY = spectrum.firstY;\n\n    // we skip the first line\n    //\n    let endLine = false;\n    let ascii;\n    let i = 0;\n    for (; i < value.length; i++) {\n      ascii = value.charCodeAt(i);\n      if (ascii === 13 || ascii === 10) {\n        endLine = true;\n      } else {\n        if (endLine) break;\n      }\n    }\n\n    // we proceed taking the i after the first line\n    let newLine = true;\n    let isDifference = false;\n    let isLastDifference = false;\n    let lastDifference = 0;\n    let isDuplicate = false;\n    let inComment = false;\n    let currentValue = 0; // can be a difference or a duplicate\n    let lastValue = 0; // must be the real last value\n    let isNegative = false;\n    let inValue = false;\n    let skipFirstValue = false;\n    let decimalPosition = 0;\n    for (; i <= value.length; i++) {\n      if (i === value.length) ascii = 13;\n      else ascii = value.charCodeAt(i);\n      if (inComment) {\n        // we should ignore the text if we are after $$\n        if (ascii === 13 || ascii === 10) {\n          newLine = true;\n          inComment = false;\n        }\n      } else {\n        // when is it a new value ?\n        // when it is not a digit, . or comma\n        // it is a number that is either new or we continue\n        if (ascii <= 57 && ascii >= 48) {\n          // a number\n          inValue = true;\n          if (decimalPosition > 0) {\n            currentValue += (ascii - 48) / Math.pow(10, decimalPosition++);\n          } else {\n            currentValue *= 10;\n            currentValue += ascii - 48;\n          }\n        } else if (ascii === 44 || ascii === 46) {\n          // a \",\" or \".\"\n          inValue = true;\n          decimalPosition++;\n        } else {\n          if (inValue) {\n            // need to process the previous value\n            if (newLine) {\n              newLine = false; // we don't check the X value\n              // console.log(\"NEW LINE\",isDifference, lastDifference);\n              // if new line and lastDifference, the first value is just a check !\n              // that we don't check ...\n              if (isLastDifference) skipFirstValue = true;\n            } else {\n              // need to deal with duplicate and differences\n              if (skipFirstValue) {\n                skipFirstValue = false;\n              } else {\n                if (isDifference) {\n                  lastDifference = isNegative ? 0 - currentValue : currentValue;\n                  isLastDifference = true;\n                  isDifference = false;\n                } else if (!isDuplicate) {\n                  lastValue = isNegative ? 0 - currentValue : currentValue;\n                }\n                let duplicate = isDuplicate ? currentValue - 1 : 1;\n                for (let j = 0; j < duplicate; j++) {\n                  if (isLastDifference) {\n                    currentY += lastDifference;\n                  } else {\n                    currentY = lastValue;\n                  }\n                  currentData.push(currentX);\n                  currentData.push(currentY * yFactor);\n                  currentX += deltaX;\n                }\n              }\n            }\n            isNegative = false;\n            currentValue = 0;\n            decimalPosition = 0;\n            inValue = false;\n            isDuplicate = false;\n          }\n\n          // positive SQZ digits @ A B C D E F G H I (ascii 64-73)\n          if (ascii < 74 && ascii > 63) {\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 64;\n          } else if (ascii > 96 && ascii < 106) {\n            // negative SQZ digits a b c d e f g h i (ascii 97-105)\n            inValue = true;\n            isLastDifference = false;\n            currentValue = ascii - 96;\n            isNegative = true;\n          } else if (ascii === 115) {\n            // DUP digits S T U V W X Y Z s (ascii 83-90, 115)\n            inValue = true;\n            isDuplicate = true;\n            currentValue = 9;\n          } else if (ascii > 82 && ascii < 91) {\n            inValue = true;\n            isDuplicate = true;\n            currentValue = ascii - 82;\n          } else if (ascii > 73 && ascii < 83) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 73;\n          } else if (ascii > 105 && ascii < 115) {\n            // negative DIF digits j k l m n o p q r (ascii 106-114)\n            inValue = true;\n            isDifference = true;\n            currentValue = ascii - 105;\n            isNegative = true;\n          } else if (ascii === 36 && value.charCodeAt(i + 1) === 36) {\n            // $ sign, we need to check the next one\n            inValue = true;\n            inComment = true;\n          } else if (ascii === 37) {\n            // positive DIF digits % J K L M N O P Q R (ascii 37, 74-82)\n            inValue = true;\n            isDifference = true;\n            currentValue = 0;\n            isNegative = false;\n          } else if (ascii === 45) {\n            // a \"-\"\n            // check if after there is a number, decimal or comma\n            let ascii2 = value.charCodeAt(i + 1);\n            if (\n              (ascii2 >= 48 && ascii2 <= 57) ||\n              ascii2 === 44 ||\n              ascii2 === 46\n            ) {\n              inValue = true;\n              if (!newLine) isLastDifference = false;\n              isNegative = true;\n            }\n          } else if (ascii === 13 || ascii === 10) {\n            newLine = true;\n            inComment = false;\n          }\n          // and now analyse the details ... space or tabulation\n          // if \"+\" we just don't care\n        }\n      }\n    }\n  }\n\n  function parseXYA(spectrum, value) {\n    let removeSymbolRegExp = /(\\(+|\\)+|<+|>+|\\s+)/g;\n\n    spectrum.isXYAdata = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeSymbolRegExp, '')\n        .split(',');\n      currentData.push(parseFloat(values[0]));\n      currentData.push(parseFloat(values[1]));\n    }\n  }\n\n  function parsePeakTable(spectrum, value, result) {\n    let removeCommentRegExp = /\\$\\$.*/;\n    let peakTableSplitRegExp = /[,\\t ]+/;\n\n    spectrum.isPeaktable = true;\n    let values;\n    let currentData = [];\n    spectrum.data = [currentData];\n\n    // counts for around 20% of the time\n    let lines = value.split(/,? *,?[;\\r\\n]+ */);\n\n    for (let i = 1; i < lines.length; i++) {\n      values = lines[i]\n        .trim()\n        .replace(removeCommentRegExp, '')\n        .split(peakTableSplitRegExp);\n      if (values.length % 2 === 0) {\n        for (let j = 0; j < values.length; j = j + 2) {\n          // takes around 40% of the time to add and parse the 2 values nearly exclusively because of parseFloat\n          currentData.push(parseFloat(values[j]) * spectrum.xFactor);\n          currentData.push(parseFloat(values[j + 1]) * spectrum.yFactor);\n        }\n      } else {\n        result.logs.push(`Format error: ${values}`);\n      }\n    }\n  }\n\n  return convert;\n}\n\nlet convert = getConverter();\n\nfunction JcampConverter(input, options, useWorker) {\n  if (typeof options === 'boolean') {\n    useWorker = options;\n    options = {};\n  }\n  if (useWorker) {\n    return postToWorker(input, options);\n  } else {\n    return convert(input, options);\n  }\n}\n\nlet stamps = {};\nlet worker;\n\nfunction postToWorker(input, options) {\n  if (!worker) {\n    createWorker();\n  }\n  return new Promise(function(resolve) {\n    let stamp = `${Date.now()}${Math.random()}`;\n    stamps[stamp] = resolve;\n    worker.postMessage(\n      JSON.stringify({\n        stamp: stamp,\n        input: input,\n        options: options,\n      }),\n    );\n  });\n}\n\nfunction createWorker() {\n  let workerURL = URL.createObjectURL(\n    new Blob(\n      [\n        `var getConverter =${getConverter.toString()};var convert = getConverter(); onmessage = function (event) { var data = JSON.parse(event.data); postMessage(JSON.stringify({stamp: data.stamp, output: convert(data.input, data.options)})); };`,\n      ],\n      { type: 'application/javascript' },\n    ),\n  );\n  worker = new Worker(workerURL);\n  URL.revokeObjectURL(workerURL);\n  worker.addEventListener('message', function(event) {\n    let data = JSON.parse(event.data);\n    let stamp = data.stamp;\n    if (stamps[stamp]) {\n      stamps[stamp](data.output);\n    }\n  });\n}\n\nfunction createTree(jcamp, options = {}) {\n  const { flatten = false } = options;\n  if (typeof jcamp !== 'string') {\n    throw new TypeError('the JCAMP should be a string');\n  }\n\n  let lines = jcamp.split(/[\\r\\n]+/);\n  let flat = [];\n  let stack = [];\n  let result = [];\n  let current;\n  let ntupleLevel = 0;\n\n  let spaces = jcamp.includes('## ');\n\n  for (let i = 0; i < lines.length; i++) {\n    let line = lines[i];\n    let labelLine = spaces ? line.replace(/ /g, '') : line;\n\n    if (labelLine.substring(0, 9) === '##NTUPLES') {\n      ntupleLevel++;\n    }\n\n    if (labelLine.substring(0, 7) === '##TITLE') {\n      let title = [labelLine.substring(8).trim()];\n      for (let j = i + 1; j < lines.length; j++) {\n        if (lines[j].startsWith('##')) {\n          break;\n        } else {\n          title.push(lines[j].trim());\n        }\n      }\n      stack.push({\n        title: title.join('\\n'),\n        jcamp: `${line}\\n`,\n        children: [],\n      });\n      current = stack[stack.length - 1];\n      flat.push(current);\n    } else if (labelLine.substring(0, 5) === '##END' && ntupleLevel === 0) {\n      current.jcamp += `${line}\\n`;\n      let finished = stack.pop();\n      if (stack.length !== 0) {\n        current = stack[stack.length - 1];\n        current.children.push(finished);\n      } else {\n        current = undefined;\n        result.push(finished);\n      }\n    } else if (current && current.jcamp) {\n      current.jcamp += `${line}\\n`;\n      let match = labelLine.match(/^##(.*?)=(.+)/);\n      if (match) {\n        let canonicDataLabel = match[1].replace(/[ _-]/g, '').toUpperCase();\n        if (canonicDataLabel === 'DATATYPE') {\n          current.dataType = match[2].trim();\n        }\n      }\n    }\n\n    if (labelLine.substring(0, 5) === '##END' && ntupleLevel > 0) {\n      ntupleLevel--;\n    }\n  }\n  if (flatten) {\n    flat.forEach((entry) => {\n      entry.children = undefined;\n    });\n    return flat;\n  } else {\n    return result;\n  }\n}\n\nmodule.exports = {\n  convert: JcampConverter,\n  createTree: createTree,\n};\n","import uniqueXFunction from 'ml-arrayxy-uniquex';\n\n/**\n * Parse a text-file and convert it to an array of XY points\n * @param {string} text - csv or tsv strings\n * @param {object} [options]\n * @param {string} [options.arrayType = 'xyxy'] - xxyy or xyxy\n * * 'xxyy' `[[x1,x2,x3,...],[y1,y2,y2,...]]`\n * * 'xyxy' `[[x1,y1],[x2,y2],[x3,y3], ...]]`\n * @param {boolean} [options.normalize = false] - will set the maximum value to 1\n * @param {boolean} [options.uniqueX = false] - Make the X values unique (works only with 'xxyy' format). If the X value is repeated the sum of Y is done.\n * @param {number} [options.xColumn = 0] - A number that specifies the x column\n * @param {number} [options.yColumn = 1] - A number that specifies the y column\n * @param {number} [options.maxNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the maximum number of y columns\n * @param {number} [options.minNumberColumns = (Math.max(xColumn, yColumn)+1)] - A number that specifies the minimum number of y columns\n * @param {boolean} [options.keepInfo = false] - shoud we keep the non numeric lines. In this case the system will return an object {data, info}\n * @return {Array<Array<number>>} - check the 'arrayType' option\n */\nexport function parseXY(text, options = {}) {\n  const {\n    normalize = false,\n    uniqueX = false,\n    arrayType = 'xyxy',\n    xColumn = 0,\n    yColumn = 1,\n    keepInfo = false,\n    maxNumberColumns = Math.max(xColumn, yColumn) + 1,\n    minNumberColumns = Math.max(xColumn, yColumn) + 1\n  } = options;\n\n  var lines = text.split(/[\\r\\n]+/);\n\n  if (arrayType !== 'xxyy' && arrayType !== 'xyxy') {\n    throw new Error(`unsupported arrayType (${arrayType})`);\n  }\n\n  var maxY = Number.MIN_VALUE;\n  var result = [[], []];\n  var info = [];\n  for (var l = 0; l < lines.length; l++) {\n    var line = lines[l].trim();\n    // we will consider only lines that contains only numbers\n    if (line.match(/[0-9]+/) && line.match(/^[0-9eE,;. \\t+-]+$/)) {\n      var fields = line.split(/,[; \\t]+|[; \\t]+/);\n      if (fields.length === 1) {\n        fields = line.split(/[,; \\t]+/);\n      }\n      if (\n        fields &&\n                fields.length >= minNumberColumns &&\n                fields.length <= maxNumberColumns\n      ) {\n        let x = parseFloat(fields[xColumn].replace(',', '.'));\n        let y = parseFloat(fields[yColumn].replace(',', '.'));\n\n        if (y > maxY) maxY = y;\n        result[0].push(x);\n        result[1].push(y);\n      }\n    } else if (line) {\n      info.push({ position: result[0].length, value: line });\n    }\n  }\n\n  if (normalize) {\n    for (var i = 0; i < result[0].length; i++) {\n      result[1][i] /= maxY;\n    }\n  }\n\n  if (uniqueX) {\n    uniqueXFunction(result[0], result[1]);\n  }\n\n  if (arrayType === 'xyxy') {\n    var newResult = [];\n    for (let i = 0; i < result[0].length; i++) {\n      newResult.push([result[0][i], result[1][i]]);\n    }\n    result = newResult;\n  }\n\n  if (!keepInfo) return result;\n\n  return {\n    info,\n    data: result\n  };\n}\n","export function fromXxyyArray(data) {\n  return { x: data[0], y: data[1] };\n}\n\nexport function fromXyxyArray(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point[0]);\n    y.push(point[1]);\n  }\n  return { x, y };\n}\n\nexport function fromXyxyObject(data) {\n  var x = [];\n  var y = [];\n  for (const point of data) {\n    x.push(point.x);\n    y.push(point.y);\n  }\n  return { x, y };\n}\n\nexport function fromGeneral(data) {\n  if (Array.isArray(data)) {\n    if (data.length === 0) return { x: [], y: [] };\n    if (Array.isArray(data[0])) {\n      if (data.length === 2) {\n        return fromXxyyArray(data);\n      } else {\n        return fromXyxyArray(data);\n      }\n    } else {\n      return fromXyxyObject(data);\n    }\n  } else {\n    if (Array.isArray(data.x) && Array.isArray(data.x)) {\n      return data;\n    } else {\n      throw new TypeError('unknown data format');\n    }\n  }\n}\n","export function toXxyyArray({ x, y }) {\n  return [x, y];\n}\n\nexport function toXyxyArray({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push([x[index], y[index]]);\n  }\n  return ans;\n}\n\nexport function toXyxyObject({ x, y }) {\n  var ans = [];\n  for (var index = 0; index < x.length; index++) {\n    ans.push({ x: x[index], y: y[index] });\n  }\n  return ans;\n}\n","import { fromGeneral, fromXxyyArray, fromXyxyArray, fromXyxyObject } from './from';\nimport { toXxyyArray, toXyxyArray, toXyxyObject } from './to';\n\n/**\n * Convert between different xy formats\n * @param {*} data - input set of points to parse\n * @param {object} [options] - input and output options\n * @param {string} [options.inputFormat] - input format, if not in list infers the kind\n * @param {string} [options.outputFormat = 'xxyyObject'] - output format\n * @return {*} - output set of points\n */\nexport default function xyConvert(data, options = {}) {\n  const { inputFormat, outputFormat = 'xxyyObject' } = options;\n\n  if (inputFormat === outputFormat) return data;\n\n  let middleData;\n  switch (inputFormat) {\n    case 'xxyyArray':\n      middleData = fromXxyyArray(data);\n      break;\n\n    case 'xyxyArray':\n      middleData = fromXyxyArray(data);\n      break;\n\n    case 'xxyyObject':\n      // this is the base case\n      middleData = data;\n      break;\n\n    case 'xyxyObject':\n      middleData = fromXyxyObject(data);\n      break;\n\n    default:\n      middleData = fromGeneral(data);\n      break;\n  }\n\n  switch (outputFormat) {\n    case 'xxyyArray':\n      return toXxyyArray(middleData);\n\n    case 'xyxyArray':\n      return toXyxyArray(middleData);\n\n    case 'xxyyObject':\n      return middleData;\n\n    case 'xyxyObject':\n      return toXyxyObject(middleData);\n\n    default:\n      throw new TypeError(`unknown output format ${outputFormat}`);\n  }\n}\n","/**\n * Parse from a xyxy data array\n * @param {Array<Array<number>>} data - xyxy array of data\n * @param {object} [meta] - same metadata object format that the convertToJcamp\n * @return {string} JCAMP of the input\n */\nexport default function creator(data, meta = {}) {\n  const {\n    title = '',\n    owner = '',\n    origin = '',\n    type = '',\n    xUnit = '',\n    yUnit = '',\n    info = {}\n  } = meta;\n  let firstX = Number.MAX_VALUE;\n  let lastX = Number.MIN_VALUE;\n  let firstY = Number.MAX_VALUE;\n  let lastY = Number.MIN_VALUE;\n  var points = [];\n\n  for (var i = 0; i < data.length; i++) {\n    if (data[i].length > 1) {\n      var x = Number(data[i][0]);\n      var y = Number(data[i][1]);\n      if (firstX > x) {\n        firstX = x;\n      }\n      if (lastX < x) {\n        lastX = x;\n      }\n      if (firstY > y) {\n        firstY = y;\n      }\n      if (lastY < y) {\n        lastY = y;\n      }\n    }\n    points.push(`${x} ${y}`);\n  }\n\n  var header = `##TITLE=${title}\n##JCAMP-DX=4.24\n##DATA TYPE=${type}\n##ORIGIN=${origin}\n##OWNER=${owner}\n##XUNITS=${xUnit}\n##YUNITS=${yUnit}\n##FIRSTX=${firstX}\n##LASTX=${lastX}\n##FIRSTY=${firstY}\n##LASTY=${lastY}\\n`;\n\n  for (const key of Object.keys(info)) {\n    header += `##$${key}=${info[key]}\\n`;\n  }\n\n  // we leave the header and utf8 fonts ${header.replace(/[^\\t\\r\\n\\x20-\\x7F]/g, '')\n\n  return `${header}##NPOINTS=${points.length}\n##PEAK TABLE=(XY..XY)\n${points.join('\\n')}\n##END`;\n}\n","import { parseXY } from 'xy-parser';\nimport xyConvert from 'ml-xy-convert';\n\nimport creator from './creator';\n\n/**\n * Convert strings into JCAMP and add extra information\n * @param {string} data - values to add to the file, usually a csv or tsv values\n * @param {object} [options]\n * @param {string} [options.meta] - metadata of the file\n * @param {string} [options.meta.title = ''] - title of the file\n * @param {string} [options.meta.owner = ''] - owner of the file\n * @param {string} [options.meta.origin = ''] - origin of the file\n * @param {string} [options.meta.type = ''] - type of data\n * @param {string} [options.meta.xUnit = ''] - units for the x axis\n * @param {string} [options.meta.yUnit = ''] - units for the y axis\n * @param {object} [options.meta.info = {}] - comments to add to the file\n * @param {object} [options.parser = {}] - 'xy-parser' options. arrayType = 'xyxy' is enforced\n * @return {string} JCAMP of the input\n */\nexport default function convertToJcamp(data, options = {}) {\n  const { meta = {}, parserOptions = {} } = options;\n\n  parserOptions.arrayType = 'xyxy';\n  parserOptions.keepInfo = true;\n  var parsed = parseXY(data, parserOptions);\n  if (!meta.info) meta.info = {};\n  meta.info.header = parsed.info.map((i) => i.value).join('\\n');\n  let jcamp = creator(parsed.data, meta);\n  return jcamp;\n}\n\n/**\n * Parse from any supported format in ml-xy-convert\n * @param {*} data - object or array with a set of points\n * @param {object} [meta] - metadata object\n * @return {string} JCAMP of the input\n */\nexport function fromJson(data, meta = {}) {\n  const parsed = xyConvert(data, { outputFormat: 'xyxyArray' });\n  return creator(parsed, meta);\n}\n"],"sourceRoot":""}